<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title></title>
        <link>https://TheSqualls.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
        <lastBuildDate>Thu, 25 Nov 2021 15:54:55 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/%E9%AB%98%E5%B9%B6%E5%8F%91/</guid>
            <title>高并发</title>
            <link>https://thesqualls.github.io/2021/11/25/%E9%AB%98%E5%B9%B6%E5%8F%91/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;如何应对高并发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何应对高并发&#34;&gt;#&lt;/a&gt; 如何应对高并发&lt;/h3&gt;
&lt;p&gt;首先考虑升级硬件方面，加强服务器的内核和 cpu，但是容易遇到瓶颈，硬件发展速度跟不上业务的发展速度，&lt;br&gt;
考虑水平升级，负载均衡多台机器，由多台机器来提供服务，并且可以对每台机器进行硬件升级；&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98/</guid>
            <title>项目问题</title>
            <link>https://thesqualls.github.io/2021/11/25/%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;企业微信会话存档流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#企业微信会话存档流程&#34;&gt;#&lt;/a&gt; 企业微信会话存档流程：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;身份校验：在企业微信后台设置公钥与可信 ip；&lt;/li&gt;
&lt;li&gt;将密匙等校验解密数据存储至数据库；&lt;/li&gt;
&lt;li&gt;企业微信端会通过公钥加密聊天数据后保存并提供调用；&lt;/li&gt;
&lt;li&gt;通过企业微信 id 获取 redis 中获取该公司上一次拉取到的聊天数据索引；&lt;/li&gt;
&lt;li&gt;项目中调用 sdk 根据参数拉取消息内容并返回加密数据；&lt;/li&gt;
&lt;li&gt;根据企业微信 id 查询相关密匙并使用密匙解密 key；&lt;/li&gt;
&lt;li&gt;解密 key 与密文通过 sdk 得到明文消息；&lt;/li&gt;
&lt;li&gt;通过策略模式将不同的明文类型进行不同方式的解析并通过 sdk 根据参数拉取相关媒体文件保存至数据库。&lt;/li&gt;
&lt;li&gt;将此次拉取的返回的消息索引保存至 redis 中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;企业微信自建应用接收消息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#企业微信自建应用接收消息&#34;&gt;#&lt;/a&gt; 企业微信自建应用接收消息：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首先，在企业微信后台配置自建应用接收的 URL、Token、EncodingAESKey；&lt;/li&gt;
&lt;li&gt;接收企业微信的验证消息，通过参数 msg_signature 对请求进行校验，确认调用者的合法性；&lt;/li&gt;
&lt;li&gt;解密 echostr 参数得到消息内容并返回消息明文，验证通过；&lt;/li&gt;
&lt;li&gt;正式接收消息也是先校验调用者的合法性，解密得到消息明文将明文存储至队列；&lt;/li&gt;
&lt;li&gt;采用定时任务定时解析队列中的消息明文，对不同的消息采用不同的消息策略进行解析并保存至数据库。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pc端用户在线心跳&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pc端用户在线心跳&#34;&gt;#&lt;/a&gt; pc 端用户在线心跳：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用户登录后会在在线表内插入一条在线数据，标识为 userCode 和 sessionId；&lt;/li&gt;
&lt;li&gt;pc 端会每隔 30 秒给后台发送一次请求，携带有唯一的 userCode 和 sessionId；&lt;/li&gt;
&lt;li&gt;服务端拿到 userCode 和 sessionId 保存至 map 中并转换为 JSON 格式的 String 字符串，以该字符串为值，当前时间戳为分数，存入到 redis 的有序集合中；&lt;/li&gt;
&lt;li&gt;接着创建定时任务每隔一分钟取出该键中的值与分数，通过解析出来的 userCode 和 sessionId 去数据库中查找到对应的数据列更新在线时间为对应分数对应的时间；&lt;/li&gt;
&lt;li&gt;最后，删除掉二十分钟没有更新数据列在线时间的数据。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/%E7%BA%BF%E7%A8%8B/</guid>
            <title>线程</title>
            <link>https://thesqualls.github.io/2021/11/25/%E7%BA%BF%E7%A8%8B/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;请你解释一下什么是线程池thread-pool&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#请你解释一下什么是线程池thread-pool&#34;&gt;#&lt;/a&gt; 请你解释一下什么是线程池 (thread pool)?&lt;/h3&gt;
&lt;p&gt;由于创建一个对象要获取内存资源或者其他更多资源，所以创建和销毁对象很费时间，所以提高服务程序效率的一个手段就是尽可能减少创建和销毁对象的次数，特别是一些很耗资源的对象创建和销毁，这就是 “池化资源” 技术产生的原因。线程池顾名思义就是事先创建若干个可执行的线程放入一个池 (容器) 中，需要的时候从池中获取线程不用自行创建，使用完毕后不需要销毁线程而是放到池中，从而减少创建和销毁对象的开销。&lt;br&gt;
常用的线程池：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CachedThreadPool: 可缓存的线程池，该线程池中没有核心线程，非核心线程的数量为 Integer.max_value，就是无限大，当有需要时创建线程来执行任务，没有需要时回收线程，适用于耗时少，任务量大的情况。&lt;/li&gt;
&lt;li&gt;SecudleThreadPool: 周期性执行任务的线程池，按照某种特定的计划执行线程中的任务，有核心线程，但也有非核心线程，非核心线程的大小也为无限大。适用于执行周期性的任务。&lt;/li&gt;
&lt;li&gt;SingleThreadPool: 只有一条线程来执行任务，适用于有顺序的任务的应用场景。&lt;/li&gt;
&lt;li&gt;FixedThreadPool: 定长的线程池，有核心线程，核心线程的即为最大的线程数量，没有非核心线程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定义线程池的几大参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;corePoolSize：线程池中的核心线程数量，在没用的时候也不会回收；&lt;/li&gt;
&lt;li&gt;maximumPoolSize：线程池中可以容纳的最大线程的数量；&lt;/li&gt;
&lt;li&gt;keepAliveTime：线程池外除了核心线程之外的其他的线程最长可以保留的时间，因为在线程池中，除了核心线程即使在无任务的情况下也不会被清楚，其他的线程都是有存活时间的，意思就是非核心线程可以保留的最长的空闲时间；&lt;/li&gt;
&lt;li&gt;unit：计算时间的单位；&lt;/li&gt;
&lt;li&gt;workQueue：等待队列，任务可以储存在任务队列中等待被执行，执行的原则是先进先出原则；&lt;/li&gt;
&lt;li&gt;threadFactory：创建线程的工厂；&lt;/li&gt;
&lt;li&gt;handler：任务队列满了之后的策略：
&lt;ul&gt;
&lt;li&gt;第一种 AbortPolicy：不执行新任务，直接抛出异常，提示线程池已满；&lt;/li&gt;
&lt;li&gt;第二种 DisCardPolicy：不执行新任务，也不抛出异常；&lt;/li&gt;
&lt;li&gt;第三种 DisCardOldPolicy：将消息队列中的第一个任务替换为当前新进来的任务执行；&lt;/li&gt;
&lt;li&gt;第四种 CallerRunsPolicy：直接调用 execute 来执行当前任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;synchronized和lock的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#synchronized和lock的区别&#34;&gt;#&lt;/a&gt; synchronized 和 lock 的区别：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;synchronize 可以给方法和代码块加锁，而 lock 只能给方法加锁；&lt;/li&gt;
&lt;li&gt;synchronize 无需手动获取锁和释放锁，发生异常会自动解锁，不会出现死锁，lock 需要自己&lt;br&gt;
手动加锁和释放锁，如 lock () 和 unlock ()，如果忘记使用 unlock ()，则会出现死锁，所以，我们一般&lt;br&gt;
会在 finally 里面使用 unlock ()。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;补充：&lt;br/&gt;&lt;br&gt;
synchronize 修饰成员方法时，默认的锁对象，就是当前对象；&lt;br/&gt;&lt;br&gt;
synchronize 修饰静态方法时，默认的锁对象是当前类的 class 对象；&lt;br/&gt;&lt;br&gt;
synchronize 修饰代码块时，可以自己来设置锁对象，比如 synchronize (this)。&lt;br/&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
            <title>数据库</title>
            <link>https://thesqualls.github.io/2021/11/25/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;事务的特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务的特性&#34;&gt;#&lt;/a&gt; 事务的特性：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;原子性：事务中的操作要么都完成，要么都不完成；&lt;/li&gt;
&lt;li&gt;一致性：事务操作前后都必须满足业务规则约束；&lt;/li&gt;
&lt;li&gt;隔离性：一个事务的执行不能被其他事务所干扰 (设置不同的隔离级别，互相干扰的程度会不同)；&lt;/li&gt;
&lt;li&gt;持久性：事务一旦提交，结果便是永久的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;事务的隔离级别解决并发情况下数据的安全性问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务的隔离级别解决并发情况下数据的安全性问题&#34;&gt;#&lt;/a&gt; 事务的隔离级别：解决并发情况下，数据的安全性问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;READ UNCOMMITED 读未提交：会产生脏读、不可重复读，会幻读；&lt;/li&gt;
&lt;li&gt;READ COMMITED 读已提交：不会产生脏读；但会产生不可重复读、幻读，ORACLE 默认；&lt;/li&gt;
&lt;li&gt;REPEATABLE READ 可重复读：可避免脏读、不可重复读；会产生幻读，MYSQL 默认；&lt;/li&gt;
&lt;li&gt;SERIALIZABLE 串行化：可避免脏读、不可重复读、幻读，但性能影响大。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;脏读：读取到其他事务未提交的数据；&lt;br/&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;不可重复读：一个事务执行的过程中读同一个数据读到了两个不同的值：事务 a 先修改 num&lt;br&gt;
 字段的值由 101-》102 并提交，事务 b 此时读取到 num 为 102，接着事务 a 又修改 num 的值由 102-》103&lt;br&gt;
，事务 b 再次读取 num 得到 103，两次读取到的结果不相同，这就是不可重复读；&lt;br/&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;幻读：一个事务操作在本地查询数据时只能看到 3 条，但是当执行更新时，却会更新 4 条：事务 a&lt;br&gt;
 操作 user 表时读取到了 3 条数据，此时事务 b 往 user 表中插入一条数据，但由于事务的隔离级别限制，&lt;br&gt;
导致事务 a 仍然只能读取到 3 条数据，但是当事务 a 执行更新并提交事务时，会发现 4 条数据都被更新。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;事务的传播特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务的传播特性&#34;&gt;#&lt;/a&gt; 事务的传播特性：&lt;/h3&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/%E7%AE%80%E5%8D%95%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
            <title>简单面试题</title>
            <link>https://thesqualls.github.io/2021/11/25/%E7%AE%80%E5%8D%95%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;1、http 和 tcp 的区别：&lt;br&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYmFpemhhbnNoaS9wLzg0ODI2MTIuaHRtbA==&#34;&gt;https://www.cnblogs.com/baizhanshi/p/8482612.html&lt;/span&gt; &lt;br&gt;&lt;br&gt;
2、== 和 equals 的区别：&lt;br&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZ2ptaG9tZS9wLzE0MzM4MjE2Lmh0bWw=&#34;&gt;https://www.cnblogs.com/gjmhome/p/14338216.html&lt;/span&gt; &lt;br&gt;&lt;br&gt;
3、String、StringBuffer 和 StringBuild 的区别： &lt;br&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTE3MDI0NzkvYXJ0aWNsZS9kZXRhaWxzLzgyMjYyODIz&#34;&gt;https://blog.csdn.net/u011702479/article/details/82262823&lt;/span&gt; &lt;br&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/springboot%E5%92%8Cspring%E5%B8%B8%E7%94%A8%E7%9A%84%E6%B3%A8%E8%A7%A3/</guid>
            <title>springboot和spring常用的注解</title>
            <link>https://thesqualls.github.io/2021/11/25/springboot%E5%92%8Cspring%E5%B8%B8%E7%94%A8%E7%9A%84%E6%B3%A8%E8%A7%A3/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;@ConfigurationProperties:&lt;br&gt;
 可以非常方便的把资源文件中的内容绑定对对象上&lt;/p&gt;
&lt;p&gt;@Value(&amp;quot;{&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2FwcC5uYW1l&#34;&gt;app.name&lt;/span&gt;}&amp;quot;):&lt;br&gt;
 注入简单值&lt;/p&gt;
&lt;p&gt;@Import:&lt;br&gt;
 通过导入的方式实现把实例加入 springIOC 容器中，作用于类上&lt;/p&gt;
&lt;p&gt;@RequestMapping:&lt;br&gt;
 这个注解可以用于类和方法上，用于类上，表示父路径，如类上是 demo，方法上是 /demo1，那么访问路径就是 demo/demo1&lt;br&gt;
 该注解有六个属性：&lt;br&gt;
params: 指定 request 中必须包含某些参数值是，才让该方法处理。&lt;br&gt;
headers: 指定 request 中必须包含某些指定的 header 值，才能让该方法处理请求。&lt;br&gt;
value: 指定请求的实际地址，指定的地址可以是 URI Template 模式&lt;br&gt;
 method: 指定请求的 method 类型， GET、POST、PUT、DELETE 等&lt;br&gt;
 consumes: 指定处理请求的提交内容类型（Content-Type），如 application/json,text/html;&lt;br&gt;
produces: 指定返回的内容类型，仅当 request 请求头中的 (Accept) 类型中包含该指定类型才返回&lt;/p&gt;
&lt;p&gt;@PathVariable:&lt;br&gt;
 对应路径上的变量，用在参数前，路径上的变量名需和参数名称一致&lt;/p&gt;
&lt;p&gt;@RequestHeader:&lt;br&gt;
 获取请求头里面的数据&lt;/p&gt;
&lt;p&gt;@RequestParam:&lt;br&gt;
 获取参数&lt;/p&gt;
&lt;p&gt;@RequestBody:&lt;br&gt;
 是指方法参数被绑定到 HTTP 请求 Body 上，前端就不能用表单的方式提交了，需要用 json 的方式提交。&lt;/p&gt;
&lt;p&gt;@ResponseBody:&lt;br&gt;
 表示输出的是 json 格式的数据。&lt;/p&gt;
&lt;p&gt;@ModelAttribute:&lt;br&gt;
1. 运用在参数上，会将客户端传递过来的参数按名称注入到指定对象中，并且会将这个对象自动加入 ModelMap 中，便于 View 层使用；&lt;br&gt;
2. 运用在方法上，会在每一个 @RequestMapping 标注的方法前执行，如果有返回值，则自动将该返回值加入到 ModelMap 中；&lt;/p&gt;
&lt;p&gt;@Bean:&lt;br&gt;
 相当于 XML 中的&lt;bean&gt;&lt;/bean&gt;, 放在方法的上面，而不是类，意思是产生一个 bean, 并交给 spring 管理，作用于方法上。&lt;/p&gt;
&lt;p&gt;@Qualifier:&lt;br&gt;
 当有多个同一类型的 Bean 时，可以用 @Qualifier (“name”) 来指定。与 @Autowired 配合使用；&lt;/p&gt;
&lt;p&gt;@Autowired:&lt;br&gt;
 属于 Spring 的 org.springframework.beans.factory.annotation 包下，可用于为类的属性、构造器、方法进行注值&lt;/p&gt;
&lt;p&gt;@Component:&lt;br&gt;
 标准一个普通的 spring Bean 类。&lt;br&gt;
@Repository:&lt;br&gt;
 标注一个 DAO 组件类。&lt;br&gt;
@Service:&lt;br&gt;
 标注一个业务逻辑组件类。&lt;br&gt;
@Controller:&lt;br&gt;
 标注一个控制器组件类。&lt;/p&gt;
&lt;p&gt;@Component: 可以代替 @Repository、@Service、@Controller，因为这三个注解是被 @Component 标注的。被注解的 java 类当做 Bean 实例，Bean 实例的名称默认是 Bean 类的首字母小写，其他部分不变。@Service 也可以自定义 Bean 名称，但是必须是唯一的！&lt;/p&gt;
&lt;p&gt;@SpringBootApplication:&lt;br&gt;
 包含 @Configuration、@EnableAutoConfiguration、@ComponentScan 通常用在启动类上。&lt;/p&gt;
&lt;p&gt;@ComponentScan:&lt;br&gt;
 组件扫描。如果扫描到有 @Component @Controller @Service 等这些注解的类，则把这些类注册为 bean。&lt;/p&gt;
&lt;p&gt;@EnableAutoConfiguration:&lt;br&gt;
 让 Spring Boot 根据应用所声明的依赖来对 Spring 框架进行自动配置，一般加在主类上。&lt;/p&gt;
&lt;p&gt;@Configuration:&lt;br&gt;
 指出该类是 Bean 配置的信息源，相当于 XML 中的&lt;beans&gt;&lt;/beans&gt;，一般加在主类上。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/mysql%E4%BD%BF%E7%94%A8/</guid>
            <title>mysql使用</title>
            <link>https://thesqualls.github.io/2021/11/25/mysql%E4%BD%BF%E7%94%A8/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;查看 MySQL 当前数据库的中的所有表：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;SELECT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TABLE_NAME,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TABLE_SCHEMA,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TABLE_TYPE,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ENGINE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FROM&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    information_schema. TABLES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WHERE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    table_type &amp;#x3D; &amp;#39;BASE TABLE&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AND table_schema &amp;#x3D;  DATABASE();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;查看当前用户下所有的数据库表并排序：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;SELECT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TABLE_NAME,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TABLE_SCHEMA,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TABLE_TYPE,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ENGINE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FROM&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    information_schema. TABLES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WHERE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    table_type &amp;#x3D; &amp;#39;BASE TABLE&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;order by TABLE_NAME asc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;索引增删&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;alter table odts.monitor_stock drop index test2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show index from odts.monitor_stock&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create unique index test2 on odts.monitor_stock (channel_code,company_id,store_id,sku_id);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;查看事务&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;select * from information_schema.innodb_trx;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/java%E5%9F%BA%E7%A1%80/</guid>
            <title>java基础</title>
            <link>https://thesqualls.github.io/2021/11/25/java%E5%9F%BA%E7%A1%80/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;1-和的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-和的区别&#34;&gt;#&lt;/a&gt; 1、&amp;amp; 和 &amp;amp;&amp;amp; 的区别：&lt;/h3&gt;
&lt;p&gt;&amp;amp; 运算符有两种用法：(1) 按位与；(2) 逻辑与。&amp;amp;&amp;amp; 运算符是短路和运算。逻辑与跟短路与的差别是非常巨大的，虽然二者都要求运算符左右两端的布尔值都是 true 整个表达式才是 true。&amp;amp;&amp;amp; 之所以称为短路运算是因为，如果 &amp;amp;&amp;amp; 左边的表达式的值是 false，右边的表达式会被直接短路掉，不会进行运算。很多时候我们可能都需要用 &amp;amp;&amp;amp; 而不是 &amp;amp;，例如在验证用户登录时判定用户名不是 null 而且不是空字符串，应当写为：username!=null&amp;amp;&amp;amp;!username.equals (&amp;quot;&amp;quot;)，二者的顺序不能交换，更不能用 &amp;amp; 运算符，因为第一个条件如果不成立，根本不能进行字符串的 equals 比较，否则会产生 NullPointerException 异常。&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-int和integer的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-int和integer的区别&#34;&gt;#&lt;/a&gt; 2、int 和 integer 的区别：&lt;/h3&gt;
&lt;p&gt;java 采用的是面向对象编程语言，但是为了编程的方便还是引入了基本数据类型，但是为了能够将这些基本数据类型当成对象操作，java 为每一个基本数据类型都引入了对应的包装类型 (wrapper class),int 的包装类就是 integer，从 java5 开始引入了自动装箱 / 拆箱机制，使得二者可以相互转换。&lt;br&gt;&lt;br&gt;
java 为每个原始数据类型提供了包装类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原始类型：boolean，char，byte，short，int，long，float，double&lt;/li&gt;
&lt;li&gt;包装类型：Boolean，Character，Byte，Short，Integer，Long，Float，Double&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class AutoUnboxingTest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static void main(String[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Integer a &amp;#x3D; new Integer(3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Integer b &amp;#x3D; 3;                  &amp;#x2F;&amp;#x2F; 将3自动装箱成Integer类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int c &amp;#x3D; 3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(a &amp;#x3D;&amp;#x3D; b);     &amp;#x2F;&amp;#x2F; false 两个引用没有引用同一对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(a &amp;#x3D;&amp;#x3D; c);     &amp;#x2F;&amp;#x2F; true a自动拆箱成int类型再和c比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3-string和stringbuffer的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-string和stringbuffer的区别&#34;&gt;#&lt;/a&gt; 3、String 和 StringBuffer 的区别：&lt;/h3&gt;
&lt;p&gt;String 和 StringBuffer 都可以存储和操作字符串。String 的值是不可变的，每次对 String 的操作都会生成新的 String 对象。而 StringBuffer 的值是可以修改的，并且不会产生新的对象。当你使用字符数据要改变的时候你就可以使用 StringBuffer。典型地，你可以使用 StringBuffers 来动态构造字符数据。&lt;br&gt;
StringBuffer 和 StringBuild 最大的区别就是 StringBuffer 是线程安全的，效率较低，StringBuild 是线程不安全的，效率高&lt;/p&gt;
&lt;h3 id=&#34;4-请你讲讲数组array和列表arraylist的区别什么时候应该使用array而不是arraylist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-请你讲讲数组array和列表arraylist的区别什么时候应该使用array而不是arraylist&#34;&gt;#&lt;/a&gt; 4、请你讲讲数组 (Array) 和列表 (ArrayList) 的区别？什么时候应该使用 Array 而不是 ArrayList：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Array 可以包含基本类型和对象类型，ArrayList 只能包含对象类型；&lt;/li&gt;
&lt;li&gt;Array 大小是固定的，ArrayList 的大小是动态变化的；&lt;/li&gt;
&lt;li&gt;ArrayList 提供了更多的方法和特性，比如：addAll (),removeAll (),iterator 等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-什么是值传递和引用传递&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-什么是值传递和引用传递&#34;&gt;#&lt;/a&gt; 5、什么是值传递和引用传递：&lt;/h3&gt;
&lt;p&gt;值传递是对基本型变量而言的，传递的是该变量的副本，改变副本不影响原变量&lt;br&gt;&lt;br&gt;
引用传递一般是对于对象型变量而言的，传递的是该对象地址的一个副本，并不是原对象本身。所以对引用对象进行操作会同时改变原对象，一般认为，java 内的传递都是值传递&lt;/p&gt;
&lt;h3 id=&#34;6-java8的新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-java8的新特性&#34;&gt;#&lt;/a&gt; 6、java8 的新特性：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;lambda 表达式 - lambda 允许把一个函数作为方法的参数（函数作为参数传递进方法中)。&lt;/li&gt;
&lt;li&gt;方法引用−方法引用提供了非常有用的语法，可以直接引用已有 Java 类或对象（实例）的方法或构造器。与 lambda 联合使用，方法引用可以使语言的构造更紧凑简洁，减少冗余代码。&lt;/li&gt;
&lt;li&gt;默认方法 - 默认方法就是一个在接口里面有了一个实现的方法；&lt;/li&gt;
&lt;li&gt;新工具 - 新的编译工具，如：Nashorn 引擎 jjs、 类依赖分析器 jdeps。&lt;/li&gt;
&lt;li&gt;Stream API - 新添加的 Stream API (java.util.stream) 把真正的函数式编程风格引入到 java 中；&lt;/li&gt;
&lt;li&gt;Date Time API- 加强对日期和时间的管理；&lt;/li&gt;
&lt;li&gt;Optional 类 - Optional 类已经成为 Java 8 类库的一部分，用来解决空指针异常；&lt;/li&gt;
&lt;li&gt;Nashorn, JavaScript 引擎 − Java 8 提供了一个新的 Nashorn javascript 引擎，它允许我们在 JVM 上运行特定的 javascript 应用。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/hashMap%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid>
            <title>hashMap的实现原理</title>
            <link>https://thesqualls.github.io/2021/11/25/hashMap%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在 jdk1.6、jdk1.7 中，hashMap 的实现是通过链表加数组实现，即使用链表处理冲突，同一 hash 值的链表都存储在一个链表里。但是当位于一个桶中的元素较多时，即 hash 值相等的元素较多值，通过 key 值依次查找的效率较低，而在 jdk1.8 中，HashMap 采用位桶 + 链表 + 红黑树实现，当链表长度超过阈值 (8) 时，将链表转换为红黑树，这样大大减低了查找时间；&lt;/p&gt;
&lt;p&gt;新增数据原理：&lt;/p&gt;
&lt;p&gt;首先调用 hash (key) 方法算出 key 的 hash 值，然后根据 hash 值加数组长度 (hash&amp;amp;(length-1)) 算出该键应该在数组所处的位置，因为数组长度 length 是 2 的 n 次方，所以 hash&amp;amp;(length-1) 相当于 hash%(length-1)；如果该位置没有任何元素，则进行插入，如果该位置是一个 Node，说明对应的位置已经保存了一个 Node 链表，就产生了 hash 碰撞，这个时候就需要逐步对比此链表中的每个 key，如果存在相等的 key，覆盖掉该 key 的值，如果不存在，则插入链表的尾部，在链表长度大于等于 8 时，转换为红黑树；当容器中的元素个数超过 capacity * loadfactor 时，容器会进行扩容 resize 为 2 的 n 次方。&lt;/p&gt;
&lt;p&gt;查询数据原理：&lt;/p&gt;
&lt;p&gt;调用 hash (key) 方法算出 key 的 hash 值，然后根据 hash 值加数组长度 (hash&amp;amp;(length-1)) 算出该键应该在数组所处的位置，遍历此处的链表，找到与 key 相等的 value 返回；&lt;/p&gt;
&lt;p&gt;扩容原理：&lt;br&gt;
判断当前 hashMap 的数组中的链表 + 1 是否大于 hashMap 的长度乘以加载因子，如果大于，则调用 resize 方法进行扩容，没有则不进行扩容&lt;/p&gt;
&lt;p&gt;附注：&lt;br&gt;
hashmap 默认的加载因子 DEFAULT_LOAD_FACTOR 是 0.75f;&lt;br&gt;
HashMap 默认 16 个 bucket 数组；&lt;br&gt;
 如果 new HashMap&amp;lt;&amp;gt;(19)，bucket 数组为 32，也就是 2 的 5 次幂，因为 19 大于 2 的 4 次幂，小于 2 的 5 次幂，以大的值为自动扩容值，且容量一定是 2 的次幂；&lt;br&gt;
HashMap 在第一次 put 的时候开辟 bucket 数组占用内存，而不是 new 的时候；&lt;br&gt;
ConcurrentHashMap 结构基本上和 Java8 的 HashMap 一样，不过保证线程安全性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;位异或运算（^）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  运算规则是：两个数转为二进制，然后从高位开始比较，如果相同则为0，不相同则为1。

  比如：8^11.

  8转为二进制是1000，11转为二进制是1011.从高位开始比较得到的是：0011.然后二进制转为十进制，就是Integer.parseInt(&amp;quot;0011&amp;quot;,2)=3;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/arrayList%E5%92%8CLinkedList%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
            <title>arrayList和LinkedList的区别</title>
            <link>https://thesqualls.github.io/2021/11/25/arrayList%E5%92%8CLinkedList%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;1、两者都是实现的 list 接口，但是一个是基于数组实现，一个是基于链表实现；前者是数组队列，相当于动态数组；后者为双向链表结构，也可当作堆栈、队列、双端队列；&lt;br&gt;
2、当进行 get/set 时，ArrayList 比 LinkedList 的效率更高，因为 LinkedList 是线性的数据存储方式，所以需要移动指针从前往后依次查找；&lt;br&gt;
3、当进行 add/remove 时，LinkedList 比 ArrayList 的效率更高，因为 ArrayList 是数组，所以在其中进行增删操作时，会对操作点之后所有数据的下标索引造成影响，需要进行数据的移动。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/hashMap%E5%92%8ChashTable%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
            <title>hashMap和hashTable的区别</title>
            <link>https://thesqualls.github.io/2021/11/25/hashMap%E5%92%8ChashTable%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;1、继承的父类不同：Hashtable 继承自 Dictionary 类，而 HashMap 继承自 AbstractMap 类。但二者都实现了 Map 接口。&lt;br&gt;
2、线程安全性不同：Hashtable 中的方法是 Synchronize 的，而 HashMap 中的方法在缺省情况下是非 Synchronize 的。在多线程并发的环境下，可以直接使用 Hashtable，不需要自己为它的方法实现同步，但使用 HashMap 时就必须要自己增加同步处理。&lt;br&gt;
3、是否提供 contains 方法： HashMap 把 Hashtable 的 contains 方法去掉了，改成 containsValue 和 containsKey，因为 contains 方法容易让人引起误解。Hashtable 则保留了 contains，containsValue 和 containsKey 三个方法，其中 contains 和 containsValue 功能相同。&lt;br&gt;
4、key 和 value 是否允许 null 值：Hashtable 中，key 和 value 都不允许出现 null 值。但是如果在 Hashtable 中有类似 put (null,null) 的操作，编译同样可以通过，因为 key 和 value 都是 Object 类型，但运行时会抛出 NullPointerException 异常。&lt;br&gt;
5、两个遍历方式的内部实现上不同：Hashtable、HashMap 都使用了 Iterator。而由于历史原因，Hashtable 还使用了 Enumeration 的方式 。&lt;br&gt;
6、hash 值不同：哈希值的使用不同，HashTable 直接使用对象的 hashCode。而 HashMap 重新计算 hash 值。&lt;br&gt;
7、内部实现使用的数组初始化和扩容方式不同：HashTable 在不指定容量的情况下的默认容量为 11，而 HashMap 为 16，Hashtable 不要求底层数组的容量一定要为 2 的整数次幂，而 HashMap 则要求一定为 2 的整数次幂。Hashtable 扩容时，将容量变为原来的 2 倍加 1，而 HashMap 扩容时，将容量变为原来的 2 倍。Hashtable 和 HashMap 它们两个内部实现方式的数组的初始大小和扩容的方式。HashTable 中 hash 数组默认大小是 11，增加的方式是 old*2+1。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/[mongoDB]%20MongoTemplate%E5%AE%9E%E7%8E%B0%E5%88%86%E7%BB%84%E8%81%9A%E5%90%88%E5%88%86%E9%A1%B5%E5%80%92%E5%BA%8F%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/</guid>
            <title>[mongoDB] MongoTemplate实现分组聚合分页倒序条件查询</title>
            <link>https://thesqualls.github.io/2021/11/25/[mongoDB]%20MongoTemplate%E5%AE%9E%E7%8E%B0%E5%88%86%E7%BB%84%E8%81%9A%E5%90%88%E5%88%86%E9%A1%B5%E5%80%92%E5%BA%8F%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;统计参加活动的用户总分排名信息&lt;br&gt;
条件：&lt;br&gt;
1、限制前一千名；&lt;br&gt;
2、用户的战绩总分必须达到一千分；&lt;br&gt;
3、时间不能超过 XXXX，超过此时间获得的得分不计入排名计算中；&lt;br&gt;
4、不允许并列一千，如分数相同，取先达到一千分的用户；&lt;br&gt;
5、需要返回用户在没有超过指定时间之前一共玩了多少次游戏；&lt;br&gt;
6、用户的战绩数据存储在 mongoDB。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;战绩信息存储结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#战绩信息存储结构&#34;&gt;#&lt;/a&gt; 战绩信息存储结构：&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;_id&#34;&lt;/span&gt; : NumberLong(&lt;span class=&#34;number&#34;&gt;2111050000447937&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;activityId&#34;&lt;/span&gt; : NumberLong(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;userId&#34;&lt;/span&gt; : NumberLong(&lt;span class=&#34;number&#34;&gt;2111030000471143&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;score&#34;&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;36&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;isDeleted&#34;&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;createUserId&#34;&lt;/span&gt; : NumberLong(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;createTime&#34;&lt;/span&gt; : NumberLong(&lt;span class=&#34;number&#34;&gt;1636079718181&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;updateTime&#34;&lt;/span&gt; : NumberLong(&lt;span class=&#34;number&#34;&gt;1636079738181&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&#34;updateUserId&#34;&lt;/span&gt; : NumberLong(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实现&#34;&gt;#&lt;/a&gt; 实现：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;limit：限制前多少名，此场景中为 1000；&lt;br&gt;
endTime：进入总分计算的战绩数据创建的最大时间；&lt;br&gt;
minScore：至少需要多少分，此场景中为 1000。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; List&amp;lt;UserRankScoreModel&amp;gt; &lt;span class=&#34;title&#34;&gt;queryUserPeriodRankAndSumScoreByEndTime&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Integer limit, Date endTime, Integer minScore)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Aggregation aggregation = Aggregation.newAggregation(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 条件一:必须要转类型，否则会查不到; lte：小于等于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Aggregation.match(Criteria.where(&lt;span class=&#34;string&#34;&gt;&#34;createTime&#34;&lt;/span&gt;).lte(endTime.getTime())),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 分组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// first：返回字段; as:给返回的数据起别名; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Aggregation.group(&lt;span class=&#34;string&#34;&gt;&#34;userId&#34;&lt;/span&gt;).first(&lt;span class=&#34;string&#34;&gt;&#34;userId&#34;&lt;/span&gt;).as(&lt;span class=&#34;string&#34;&gt;&#34;userId&#34;&lt;/span&gt;).count().as(&lt;span class=&#34;string&#34;&gt;&#34;gameNum&#34;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        .sum(&lt;span class=&#34;string&#34;&gt;&#34;score&#34;&lt;/span&gt;).as(&lt;span class=&#34;string&#34;&gt;&#34;sumScore&#34;&lt;/span&gt;).max(&lt;span class=&#34;string&#34;&gt;&#34;createTime&#34;&lt;/span&gt;).as(&lt;span class=&#34;string&#34;&gt;&#34;maxTime&#34;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 条件二:gte：大于等于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Aggregation.match(Criteria.where(&lt;span class=&#34;string&#34;&gt;&#34;sumScore&#34;&lt;/span&gt;).gte(Long.valueOf(minScore))),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Aggregation.sort(Sort.Direction.DESC, &lt;span class=&#34;string&#34;&gt;&#34;sumScore&#34;&lt;/span&gt;).and(Sort.Direction.ASC, &lt;span class=&#34;string&#34;&gt;&#34;maxTime&#34;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 分页 skip:从哪里开始(不包括起点)，limit：显示多少条数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Aggregation.skip(&lt;span class=&#34;number&#34;&gt;0L&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Aggregation.limit(limit));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// user_activity_score：collection; UserRankScoreModel：接收返回数据的model   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        AggregationResults&amp;lt;UserRankScoreModel&amp;gt; userRankScoreModels&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                = mongoTemplate.aggregate(aggregation, &lt;span class=&#34;string&#34;&gt;&#34;user_activity_score&#34;&lt;/span&gt;, UserRankScoreModel&lt;span class=&#34;class&#34;&gt;.&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; userRankScoreModels.getMappedResults();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;UserRankScoreModel.java:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UserRankScoreModel&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 用户id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Long userId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 游戏次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Integer gameNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 游戏总分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Integer sumScore;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Long &lt;span class=&#34;title&#34;&gt;getUserId&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; userId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setUserId&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Long userId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.userId = userId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Integer &lt;span class=&#34;title&#34;&gt;getGameNum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gameNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setGameNum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Integer gameNum)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.gameNum = gameNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Integer &lt;span class=&#34;title&#34;&gt;getSumScore&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; sumScore;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setSumScore&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Integer sumScore)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.sumScore = sumScore;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/[JS]JS%E9%9B%86%E5%90%88%E8%BD%AC%E6%8D%A2/</guid>
            <title>[JS]JS集合转换</title>
            <link>https://thesqualls.github.io/2021/11/25/[JS]JS%E9%9B%86%E5%90%88%E8%BD%AC%E6%8D%A2/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;js集合转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js集合转换&#34;&gt;#&lt;/a&gt; JS 集合转换&lt;/h2&gt;
&lt;h3 id=&#34;object转map&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#object转map&#34;&gt;#&lt;/a&gt; Object 转 Map&lt;/h3&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let obj&amp;#x3D;&amp;#123;foo:&amp;#39;hello&amp;#39;,bar:100&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let map&amp;#x3D;new Map(Object.entries(obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;map转object&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#map转object&#34;&gt;#&lt;/a&gt; Map 转 Object&lt;/h3&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let map&amp;#x3D;new Map([[&amp;#39;foo&amp;#39;,&amp;#39;hello&amp;#39;],[&amp;#39;bar&amp;#39;,100]]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let obj&amp;#x3D;Object.fromEntries(map);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;object转array&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#object转array&#34;&gt;#&lt;/a&gt; Object 转 Array&lt;/h3&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let obj&amp;#x3D;&amp;#123;&amp;#39;foo&amp;#39;:&amp;#39;hello&amp;#39;,&amp;#39;bar&amp;#39;:100&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let arr&amp;#x3D;Object.entries(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(arr);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;array转成object&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#array转成object&#34;&gt;#&lt;/a&gt; Array 转成 Object&lt;/h3&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arr&amp;#x3D;[[&amp;#39;foo&amp;#39;,&amp;#39;hello&amp;#39;],[&amp;#39;bar&amp;#39;,100]];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let obj&amp;#x3D;Object.fromEntries(arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;array转set&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#array转set&#34;&gt;#&lt;/a&gt; Array 转 Set&lt;/h3&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arr&amp;#x3D;[[&amp;#39;foo&amp;#39;,&amp;#39;hello&amp;#39;],[&amp;#39;bar&amp;#39;,100]];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let set&amp;#x3D;new Set(arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(set)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B(JMM)/</guid>
            <title>Java内存模型(JMM)</title>
            <link>https://thesqualls.github.io/2021/11/25/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B(JMM)/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Java 内存模型：Java 内存模型（Java Memory Model ,JMM）就是一种符合内存模型规范的，屏蔽了各种硬件和操作系统的访问差异的，保证了 Java 程序在各种平台下对内存的访问都能保证效果一致的机制及规范。&lt;/p&gt;
&lt;p&gt;Java 内存模型规定了所有的变量都存储在主内存中，每条线程还有自己的工作内存，线程的工作内存中保存了该线程中是用到的变量的主内存副本拷贝，线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存。不同的线程之间也无法直接访问对方工作内存中的变量，线程间变量的传递均需要自己的工作内存和主存之间进行数据同步进行。&lt;/p&gt;
&lt;p&gt;而 JMM 就作用于工作内存和主存之间数据同步过程。他规定了如何做数据同步以及什么时候做数据同步。&lt;/p&gt;
&lt;p&gt;JMM 是一种规范，目的是解决由于多线程通过共享内存进行通信时，存在的本地内存数据不一致、编译器会对代码指令重排序、处理器会对代码乱序执行等带来的问题。目的是保证并发编程场景中的原子性、可见性和有序性。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGZzMjY0MDY2Njk2MC9wLzExMDE5Nzk4Lmh0bWw=&#34;&gt;https://www.cnblogs.com/lfs2640666960/p/11019798.html&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/11/25/JVM/</guid>
            <title>JVM</title>
            <link>https://thesqualls.github.io/2021/11/25/JVM/</link>
            <pubDate>Thu, 25 Nov 2021 15:54:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;java虚拟机的作用是什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java虚拟机的作用是什么&#34;&gt;#&lt;/a&gt; java 虚拟机的作用是什么？&lt;/h3&gt;
&lt;p&gt;java 虚拟机可以让 java 语言编译程序只需生成在 java 虚拟机上运行的字节码文件就能在多种不同平台运行。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/%E7%AC%94%E8%AE%B0/</guid>
            <title>笔记</title>
            <link>https://thesqualls.github.io/2021/06/03/%E7%AC%94%E8%AE%B0/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis&#34;&gt;#&lt;/a&gt; redis：&lt;/h2&gt;
&lt;h4 id=&#34;五大数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五大数据类型&#34;&gt;#&lt;/a&gt; 五大数据类型：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符串 String&lt;/strong&gt;: 一个 key 对应一个 value；可以包含任何数据，如图片或者序列化的对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有序集合 sorted set&lt;/strong&gt;：string 类型元素的集合，不允许重复的成员；每一个元素都会关联一个 double 类型的分数，通过分数来为集合中的成员进行从小到大的排序；成员是唯一的，分数可以重复；复杂度 O (1)；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无序集合 set&lt;/strong&gt;：string 类型的无序集合，通过哈希表实现；复杂度 O (1)；sadd 添加元素到 key 对应的 set 集合中，成功返回 1，如果元素已经在集合中返回 0；具有集合内元素的唯一性，第二次插入的元素将被忽略；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;散列 hash&lt;/strong&gt;：键值对集合；string 类型的 filed 和 value 的映射表，适合用来存储对象；并且可以像数据库中 update 一个属性一样只修改某一项属性值 (Memcached 中需要取出整个字串反序列化成对象修改完再序列化存回去)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;列表 list&lt;/strong&gt;：简单的字符串列表，按照插入顺序排序；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;持久化方式及其数据恢复&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#持久化方式及其数据恢复&#34;&gt;#&lt;/a&gt; 持久化方式及其数据恢复：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RDB&lt;/strong&gt;：按指定时间间隔执行数据集的时间点快照；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AOF&lt;/strong&gt;：记录 redis 服务器接收的每个写入操作，这些操作将在服务器启动时再次播放，以重建原始数据集；仅采用追加方式；当日志文件太大时，可以后台重写该日志文件；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区别及其注意点&lt;/strong&gt;：&lt;br&gt;
&lt;br/&gt;&lt;br&gt;
1、Redis 重新启动时，AOF 用于重建原始数据集，保证数据最完整；&lt;br/&gt;&lt;br&gt;
2、RDB 文件适合备份。RDB 是 Redis 数据的非常紧凑的单文件时间点表示，可以轻松还原数据集的不同版本。RDB 最大限度地提高了 Redis 的性能，在此方式下 redis 会单独创建一个子线程来进行持久化，而主进程不会进行任何 IO 操作，在大规模数据的恢复下，RDB 相较于 AOF 更为高效。&lt;br/&gt;&lt;br&gt;
3、由于 AOF 是以追加方式将每次写的操作保存到日志文件末尾，导致 AOF 文件会比 RDB 文件大，且不做任何处理的话，AOF 文件会越来越大，为此，Redis 提供了 AOF 文件重写机制，当 AOF 文件的大小超过设定阈值，redis 就会启动 AOF 文件的内容压缩，只保留可以恢复数据的最小指定集。举例：假如我们调用了 100 次 INCR 指令，在 AOF 文件中就要存储 100 条指令，但这明显是很低效的，完全可以把这 100 条指令合并成一条 SET 指令，这就是重写机制的原理。&lt;br&gt;
4、Redis 如果意外宕机，采用 RDB 可能会丢失几分钟的数据 (取决于 RDB 时间快照的间隔)，而 AOF 默认的每秒 fsync 策略，一旦出现故障，最多只会丢失 1 秒的数据；&lt;br/&gt;&lt;br&gt;
5、由于 RDB 经常需要 fork 子进程来保存数据集到硬盘上，当数据集比较大的时候，这个过程可能会非常耗时，可能会导致 Redis 在一些毫秒级内不能响应客户端的请求；而根据所使用的 fsync 策略，AOF 的速度可能会慢于 RDB，通常，在将 fsync 设置为每秒的情况下，性能仍然很高，并且在禁用 fsync 的情况下，即使在高负载下，它也应与 RDB 一样快。 即使在巨大的写负载情况下，RDB 仍然能够提供有关最大延迟的更多保证；&lt;br/&gt;&lt;br&gt;
6、默认情况 Redis 的持久化方式是 RDB；如果只配置 AOF，重启时加载 AOF 文件恢复数据，同时配置 RDB 和 AOF 的情况，重启是只加载 AOF 文件恢复数据，只配置 RDB，重启是将加载 dump 文件恢复数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;常见面试题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见面试题&#34;&gt;#&lt;/a&gt; 常见面试题：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;什么是缓存穿透？如何避免？&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;一般的缓存系统，都是按照 key 去查询缓存，如果不存在对应的 value，就应该去后端系统查找 (如数据库)。而一些恶意的请求故意访问不存在的 key，从而导致后端系统造成过大的压力，这就叫缓存穿透。&lt;/li&gt;
&lt;li&gt;解决：&lt;br&gt;&lt;br&gt;
1、对查询结果为空的情况也进行缓存，缓存时间设置短一点，或者该 key 对应的数据 insert 了之后清理缓存；&lt;br/&gt;&lt;br&gt;
2、对一定不存在的 key 进行过滤。可以把所有的可能存在的 key 放到一个大的 bitmap 中，查询时通过该 map 过滤。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;什么是缓存雪崩？如何避免？
&lt;ul&gt;
&lt;li&gt;当缓存服务器重启或大量缓存在某一个时间段失效，这样在失效的时候，会给后端带来很大的压力。导致系统崩溃，这就是缓存雪崩。&lt;/li&gt;
&lt;li&gt;解决：&lt;br/&gt;&lt;br&gt;
1、在缓存失效后，通过加锁或者队列来控制读数据库写缓存的线程数量。比如对某一个 key 只允许一个线程查询数据和写缓存，其他线程等待；&lt;br/&gt;&lt;br&gt;
2、做二级缓存，A1 为原始缓存，A2 未拷贝缓存，A1 失效时，可以访问 A2，A1 缓存失效时间设置为短期，A2 设置为长期；&lt;br/&gt;&lt;br&gt;
3、不同的 key 设置不同的过期时间，让缓存的失效时间点尽量分布均匀。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;什么是缓存击穿？如何避免？
&lt;ul&gt;
&lt;li&gt;对于一些设置了过期时间的 key，如果这些 key 在某些时间点被超高并发地访问，且此时这些缓存失效，这些并发量高的请求发现缓存失效去访问数据库，给数据库大量的压力，导致数据库崩溃，这就是缓存击穿，相较于缓存雪崩的区别，一个是大量的 key 同时过期，导致多个请求去请求数据库数据导致数据库崩溃，一个是大量的请求去访问同一个 key，在访问的同时 key 过期，去访问数据库导致数据库崩溃。&lt;/li&gt;
&lt;li&gt;解决：&lt;br/&gt;&lt;br&gt;
1、使用互斥锁：单机可以使用 synchronized 或者 lock 来处理，分布式环境就用分布式锁，如 memcache 的 add, redis 的 setnx, zookeeper 的添加节点操作 (讲得不好可能会被弄死)；&lt;br/&gt;&lt;br&gt;
2、&amp;quot;提前&amp;quot; 使用互斥锁 (mutex key)： 在 value 内部设置 1 个超时值 (timeout1), timeout1 比实际的 memcache timeout (timeout2) 小。当从 cache 读取到 timeout1 发现它已经过期时候，马上延长 timeout1 并重新设置到 cache。然后再从数据库加载数据并设置到 cache 中。&lt;br/&gt;&lt;br&gt;
3、设置缓存 “永不过期”：&lt;br/&gt;&lt;br&gt;
     (1) 从 redis 上看，不设置过期时间，这就保证了，不会出现热点 key 过期问题，也就是 “物理” 不过期。&lt;br/&gt;&lt;br&gt;
     (2 从功能上看，如果不过期，那不就成静态的了吗？所以我们把过期时间存在 key 对应的 value 里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建，也就是 “逻辑” 过期)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;其他&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;配置 databases 来选择存储的数据库，可以随时通过该命令调整；&lt;/li&gt;
&lt;li&gt;这些以数字命名的数据库又与我们理解的数据库有所区别。首先 Redis 不支持自定义数据库的名字，每个数据库都以编号命名，开发者必须自己记录哪些数据库存储了哪些数据。另外 Redis 也不支持为每个数据库设置不同的访问密码，所以一个客户端要么可以访问全部数据库，要么连一个数据库也没有权限访问。最重要的一点是多个数据库之间并不是完全隔离的，比如 FLUSHALL 命令可以清空一个 Redis 实例中所有数据库中的数据。综上所述，这些数据库更像是一种命名空间，而不适宜存储不同应用程序的数据。比如可以使用 0 号数据库存储某个应用生产环境中的数据，使用 1 号数据库存储测试环境中的数据，但不适宜使用 0 号数据库存储 A 应用的数据而使用 1 号数据库 B 应用的数据，不同的应用应该使用不同的 Redis 实例存储数据。由于 Redis 非常轻量级，一个空 Redis 实例占用的内存只有 1M 左右，所以不用担心多个 Redis 实例会额外占用很多内存。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/springboot%E7%9A%84%E5%A5%BD%E5%A4%84%EF%BC%9F%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9B%E5%8A%A0%E8%BD%BD%E5%99%A8/</guid>
            <title>springboot的好处？用过哪些加载器</title>
            <link>https://thesqualls.github.io/2021/06/03/springboot%E7%9A%84%E5%A5%BD%E5%A4%84%EF%BC%9F%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9B%E5%8A%A0%E8%BD%BD%E5%99%A8/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;springboot 的好处？用过哪些加载器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于 spring：springboot 基于 spring，所以 spring 有的优点 springboot 也有，不需要开发人员学习一个全新的框架，学习门槛相对较低；&lt;/li&gt;
&lt;li&gt;快速编码：springboot 的依赖包都是基于 maven 的 pom 文件提供的，而 springboot 本身就集成了特别多的第三方框架。以前开发 spring 应用时，需要用到的第三方框架的库都需要开发人员一个一个去寻找；现在不需要了，有些可能只需引入一个 pom.xml，就能把大量需要用到的第三方库自动引入到项目中。所以减少了开发工作量，实现快速编码；&lt;/li&gt;
&lt;li&gt;模块化：基于 springboot 开发的项目可以非常简单的实现模块化编程，这样的话可以非常有效的实现项目的分工合作，减少开发过程中的代码冲突。模块化编程还可以非常高效的实现减少代码的改动量，按需修改模块，降低产生发生事故概率；&lt;/li&gt;
&lt;li&gt;配置简单：springboot 摒弃了繁琐的 xml 配置文件，大量的配置文件经常是导致生产事故的原因。springboot 大量采用 yml 形式的配置文件再加上相应的 Annotation，从而大大减少了配置文件的个数，因为以前的 spring 应用引入一个第三方框架说不定就要添加一个配置文件。举个例子，比如项目中要引入数据库连接池 HikariCP，就需要添加一个关于 HikariCP 数据库连接池的配置文件，但是使用了 springboot 采用 HikariCP 可能就只需要那么几行配置就可以了，因为 Springboot 默认集成 HikariCP 数据库连接池，提供了很多默认的配置；&lt;/li&gt;
&lt;li&gt;便捷部署：springboot 天生就是为了简单、快捷部署而生。springboot 内嵌了 tomcat，不需要额外部署应用服务器 tomcat，只需简单一个 java 运行环境即可，而且启动的命令也非常简单：java -jar xxx-release.jar。同时 springboot 结合现在非常火的技术 Docker、Kubernetes 可以快速实现集群部署；&lt;/li&gt;
&lt;li&gt;有效监控：springboot 集成了非常高效的监控框架，只要引入对 spring-boot-statr-actuator 的依赖，就可以实现对服务性能的监控。结合 springcloud 就可以实现对整个微服务链路的全天候监控。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Java 类加载器：&lt;br&gt;
java 类加载器常用的大致有三种：启动 (Bootstrap) 类加载器，扩展 (EXtension) 类加载器，系统 (System) 类加载器；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动 (Bootstrap) 类加载器：&lt;br&gt;
启动类加载器又称为引导类加载器，主要加载的是 JVM 自身需要的类，这个类加载使用 C&lt;ins&gt; 语言实现，是虚拟机自身的一部分，负责将 &amp;lt;java_home&amp;gt;/lib 路径下的核心类库或 - xbootclasspath 参数指定的路径下的 jar 包加载到内存中，注意：由于虚拟机是按文件名识别加载 jar 包的，如 rt.jar，如果文件名不被虚拟机识别，即使把 jar 包丢到 lib 目录下也是没有作用的 (出于安全考虑，Bootstrap 启动类加载器只加载包名为 java、javax、sun 等开头的类)；由于是 C&lt;/ins&gt; 实现，没有父类。&lt;/li&gt;
&lt;li&gt;扩展 (EXtension) 类加载器：&lt;br&gt;
扩展类加载器是指 Sun 公司 (已被 Oracle 收购) 实现的 sun.misc.Launcher$ExtClassLoader 类，由 Java 语言实现的，是 Launcher 的静态内部类，它负责加载 &amp;lt; JAVA_HOME&amp;gt;/lib/ext 目录下或者由系统变量 - Djava.ext.dir 指定位路径中的类库，开发者可以直接使用标准扩展类加载器；由 Java 语言实现，父类加载器为启动类加载器。&lt;/li&gt;
&lt;li&gt;系统 (System) 类加载器：&lt;br&gt;
也称应用程序加载器是指 Sun 公司实现的 sun.misc.Launcher$AppClassLoader。它负责加载系统类路径 java -classpath 或 - D java.class.path 指定路径下的类库，也就是我们经常用到的 classpath 路径，开发者可以直接使用系统类加载器，一般情况下该类加载是程序中默认的类加载器，通过 ClassLoader#getSystemClassLoader () 方法可以获取到该类加载器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;java 虚拟机对 class 文件采用的是按需加载的方式，也就是说当需要使用该类时才会将它的 class 文件加载到内存生成 class 对象，而且加载某个类的 class 文件时，java 虚拟机采用的是双亲委托模式。&lt;/p&gt;
&lt;p&gt;装载验证流程：&lt;br&gt;
每个编写的 “.java” 扩展名文件都存储着需要执行的程序逻辑，这些 “.java” 文件经过 java 编译器编译成拓展名为 “.class” 的文件，“.class” 文件中保存这 java 代码经转换后的虚拟机指令，当需要使用某个类时，虚拟机将会加载它的 “.class” 文件，并创建对应的 class 对象，将 class 文件加载到虚拟机的内存中，这个过程称为类加载，类加载的过程：&lt;br/&gt;&lt;br&gt;
加载–》(验证–》准备–》解析)(链接)–》初始化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载：类加载过程的一个阶段：通过一个类的完全限定查找此类字节码文件，并利用字节码文件创建一个 class 对象；&lt;br/&gt;&lt;br&gt;
链接：&lt;/li&gt;
&lt;li&gt;验证：目的在于确保 class 文件的字节流中包含信息符合当前虚拟机要求，不会危害虚拟机安全。主要包括四种验证，文件格式验证，元数据验证，字节码验证，符号引用验证。&lt;br/&gt;&lt;br&gt;
文件格式验证：是否以 0xCAFEBABE 开头，版本号是否合理；&lt;br/&gt;&lt;br&gt;
元数据验证：是否有父亲，继承了 final 类？非抽象类实现了所有的抽象方法；&lt;br/&gt;&lt;br&gt;
字节码验证：运行检查，栈数据类型和操作码数据参数吻合，跳转指令指定到合理的位置；&lt;br/&gt;&lt;br&gt;
符号引用验证：常量池中描述类是否存在，访问的方法或字段是否存在且有足够的权限。&lt;/li&gt;
&lt;li&gt;准备：为类变量 (即 static 修饰的字段变量) 分配内存并设置改类变量的初始值即 0 (如 static int i=5; 这里只将 i 初始化为 0，至于 5 的值将在初始化是赋值)，这里不包含用 final 修饰的 static，因为 final 在编译的时候就分配了，注意这里包含为实例化变量初始化，类变量会分配在方法区中，而实例变量是会随着对象一起分配到 java 堆中。&lt;br&gt;
分配内存，并为类设置初始值 (方法区中)：
&lt;ul&gt;
&lt;li&gt;public static int v=1;&lt;/li&gt;
&lt;li&gt;在准备阶段中，v 会被设置为 0&lt;/li&gt;
&lt;li&gt;在初始化的中才会被设置为 1&lt;/li&gt;
&lt;li&gt;对于 static final 类型，在准备阶段就会被赋上正确的值&lt;/li&gt;
&lt;li&gt;public static final int v=1;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解析：主要将常量池中的符号引用替换为直接引用的过程。符号引用就是一组符号来描述目标，可以是任何字面量，而直接引用就是直接指向目标的指针、相对偏移量或一个间接定位到目标的句柄。有类或接口的解析，字段解析，类方法解析，接口方法解析&lt;/li&gt;
&lt;li&gt;初始化：类加载最后阶段，若该类有超类，则对其进行初始化，执行静态初始化器和静态初始化成员变量 (如前面只初始化了默认值的 static 变量将会在这个阶段赋值，成员变量也将被初始化)。
&lt;ul&gt;
&lt;li&gt;执行类构造器
&lt;ul&gt;
&lt;li&gt;static 变量赋值语句&lt;/li&gt;
&lt;li&gt;static {} 代码块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;子类的调用前保证父类的被调用&lt;/li&gt;
&lt;li&gt;是线程安全的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类加载器的任务是根据一个类的全限定名来读取此类的二进制字节流到 JVM 中，然后转换为一个与目标类对应的 java.lang.class 对象实例。&lt;/p&gt;
&lt;p&gt;双亲委托模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;委托 / 概念：当加载一个 class 的时候，当前加载器会先委托父加载器加载，如果父加载器没能加载，则自己加载&lt;/li&gt;
&lt;li&gt;可见：父加载器加载的 class，对子加载器都是可见的，而之类加载的 class 父加载器不知道；&lt;/li&gt;
&lt;li&gt;单一：一个 class 只能被加载一次&lt;/li&gt;
&lt;li&gt;好处：双亲委托模式的好处是 java 类随着它的类加载器一起具备了一种带有优先级的层次关系，通过这种层级关系可以避免类的重复加载，当父类已经加载了该类时，就没有必要子 ClassLoader 再加载一次。其次是考虑安全因素，java 核心 api 中定义类型不会被随意替换，假设通过网络传递一个名为 java.lang.Integer 的类，通过双亲委托模式传递到启动类加载器，而启动类加载器在核心 Java API 发现这个名字的类，发现该类已经被加载，并不会重新加载网络传递过来的 java.lang.Integer，而直接返回已加载过 Integer.class，这样便可以防止核心 API 库被随意篡改。如果我们在 classpath 路径下自定义一个名为 java.lang.SingleInteger 类，该类并不存在 java.lang 中，经过双亲委托模式，传递到启动类加载器中，由于父类加载器路径下并没有该类，所以不会加载，将反向委托给子类加载器加载，最终会通过系统类加载器加载该类。但是这样做是不被允许的，因为 java.lang 是核心 API 包，需要访问权限，强制加载会报出如下异常：&lt;br&gt;
java.lang.SecurityException: Prohibited package name: java.lang&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类加载器的代理模式：类加载器在尝试自己去查找某个类的字节代码并定义它时，会先代理给其父类加载器，由父类加载器先去尝试加载这个类，依次类推，在介绍代理模式背后的动机之前，首先需要说明一下 Java 虚拟机是如何判定两个类是相同的。java 虚拟机不仅要看类的全名是否相同，还要看加载此类的类加载器是否一样。只有两者都相同的情况，才认为两个类是相同的。即便是同样的字节代码，被不同的类加载器之后所得的类，也是不同的。比如一个 Java 类 com.example.Sample, 编译之后生成了字节代码文件 Sample.class。两个不同的类加载器 ClassLoaderA 和 ClassLoaderB 分别读取了这个 Sample.class 文件，并定义出两个 java.lang.Class 类的实例来表示这个类。这两个实例是不相同的。对于 Java 虚拟机来说，它们是不同的类。试图对这两个类的对象进行相互赋值，会抛出运行时异常 ClassCastException。&lt;/p&gt;
&lt;p&gt;代理模式是为了保证 Java 核心库的类型安全。所有 Java 应用都至少需要引用 java.lang.Object 类，也就是说在运行的时候，java.lang.Object 这个类需要被加载到 Java 虚拟机中。如果这个加载过程由 Java 应用自己的类加载器来完成的话，很可能就存在多个版本的 java.lang.Object 类，而且这些类之间是不兼容的，通过代理模式，对于 Java 核心库的类的加载工作由引导类加载器来统一完成，保证了 Java 应用所使用的都是同一版本的 Java 核心库的类，是互相兼容的。&lt;/p&gt;
&lt;p&gt;不同的类加载器为相同名称的类创建了额外的名称空间。相同名称的类可以并存在 Java 虚拟机中，只需要用不同的类加载器来加载它们即可。不同类加载器加载的类之间是不兼容的，这就相当于在 Java 虚拟机内部创建了一个个互相隔离的 Java 类空间。这种技术在许多框架中都被用到&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[%E9%9B%86%E5%90%88]%E5%BC%95%E7%94%A8%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%9C%E9%9B%86%E5%A4%8D%E5%88%B6/</guid>
            <title>[集合]引用泛型结果集复制</title>
            <link>https://thesqualls.github.io/2021/06/03/[%E9%9B%86%E5%90%88]%E5%BC%95%E7%94%A8%E6%B3%9B%E5%9E%8B%E7%BB%93%E6%9E%9C%E9%9B%86%E5%A4%8D%E5%88%B6/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;由于现在在做的项目数据量太大，导致查询太慢，所以对查询出来的 List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; 类型的结果集进行了 ehcache 缓存处理，本来这样做是没什么问题的，但是当我们对缓存后的结果集进行相应的处理时，问题就发生了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;未加缓存处理前的代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; newWealths = indexService.newWealth(param);  &lt;span class=&#34;comment&#34;&gt;//查询结果集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap&amp;lt;String, Object&amp;gt; newWealth: newWealths) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	String recommendStock = (String) newWealths.get(&lt;span class=&#34;string&#34;&gt;&#34;recommendStock&#34;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	recommendStock=stockCache.insertStockInfo(recommendStock,&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);  &lt;span class=&#34;comment&#34;&gt;//对结果集的字段进行高亮处理(&amp;lt;a href=&#34;javascript:void(0);&#34; style=&#34;color:red&#34;&amp;gt;recommendStock&amp;lt;/a&amp;gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	newWealths.put(&lt;span class=&#34;string&#34;&gt;&#34;recommendStock&#34;&lt;/span&gt;, recommendStock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;model.put(&lt;span class=&#34;string&#34;&gt;&#34;list&#34;&lt;/span&gt;, newWealths);  &lt;span class=&#34;comment&#34;&gt;//添加到ModelMap对象中去&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#34;newwealth/newwealth&#34;&lt;/span&gt;;  &lt;span class=&#34;comment&#34;&gt;//返回相应的jsp页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很显然，当我们进行相应的处理后，结果集 newWealths 已经和从数据库里面读取出来的结果相较而言发生了改变，但引用地址仍然是相同的，在对 recommendStock 字段进行高亮处理后，newWealths 对象的引用仍然是原来的 newWealths 对象引用，而当我们植入了缓存后，发起第二次发生请求时，缓存会拿到第一次运行的结果集的引用地址 (即进行了高亮处理的 newWealths 对象)，再次对该结果集进行高亮处理，从而导致仅有第一次访问的时候，结果集才是正确的。&lt;br&gt;
解决：考虑到是由于高亮处理时在原来的结果集上进行处理而导致后续的问题，从而我们可以创建一个新的 List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; 集合来存储原来的 newWealths 对象，在新对象上进行高亮处理，这样就可以避免拿到缓存对象发生了变化 (高亮处理)。&lt;br&gt;
但是这里就有一个问题：由于 list 集合是引用传递，HashMap 集合也是引用传递，当我们重新定义一个 List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; 类型的集合使用 = 或者 addAll () 来进行值的复制时，还是会修改原来的对象 (因为 = 传递的是同一个引用地址，而使用 addAll () 拿到的 list 集合虽然是新的集合，但是集合内的引用对象 HashMap 还是原来的 HashMap 的引用地址，所以这二者导致的结果要么就是对原对象的引用处理，要么就是对原对象的引用元素的引用处理，至于采用 clone () 方法和 new ArrayList&amp;lt;&amp;gt; (原对象) 方法实际上实现的还是和 addAll 一样的，就不再解释)。&lt;br&gt;
那么，讲讲我们该如何去解决这种问题，由于采用 clone ()，addAll ()，new ArrayList&amp;lt;&amp;gt; (原对象) 这三种方法都是会产生新对象，不会产生对同一个地址的引用，这个时候我们就可以通过 for 循环来将创建一个新的 HashMap&amp;lt;String, Object &amp;gt; 对象来获取原 HashMap&amp;lt;String, Object &amp;gt; 的值，将其存入我们新定义的 List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; 集合，这样就可以避免我们处理新的 List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; 集合对象时同时会对原对象产生更改。代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; newWealths = indexService.newWealth(param);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; list = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap&amp;lt;String, Object&amp;gt; hashMap : newWealths) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	HashMap&amp;lt;String, Object&amp;gt; newMap = (HashMap&amp;lt;String, Object&amp;gt;) hashMap.clone();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	list.add(newMap);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap&amp;lt;String, Object&amp;gt; l : list)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	String recommendStock = (String) l.get(&lt;span class=&#34;string&#34;&gt;&#34;recommendStock&#34;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	recommendStock=stockCache.insertStockInfo(recommendStock,&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	l.put(&lt;span class=&#34;string&#34;&gt;&#34;recommendStock&#34;&lt;/span&gt;, recommendStock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;model.put(&lt;span class=&#34;string&#34;&gt;&#34;list&#34;&lt;/span&gt;, list);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&#34;newwealth/newwealth&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[%E8%BF%87%E6%BB%A4%E5%99%A8Filter]%E5%9C%A8%E8%BF%87%E6%BB%A4%E5%99%A8Filter%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E6%96%B9%E6%B3%95%E4%B8%AD%E8%8E%B7%E5%8F%96bean/</guid>
            <title>[过滤器Filter]在过滤器Filter的初始化方法中获取bean</title>
            <link>https://thesqualls.github.io/2021/06/03/[%E8%BF%87%E6%BB%A4%E5%99%A8Filter]%E5%9C%A8%E8%BF%87%E6%BB%A4%E5%99%A8Filter%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E6%96%B9%E6%B3%95%E4%B8%AD%E8%8E%B7%E5%8F%96bean/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;过滤器的加载时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过滤器的加载时间&#34;&gt;#&lt;/a&gt; 过滤器的加载时间：&lt;/h3&gt;
&lt;p&gt;过滤器是在程序启动的时候加载的，且仅加载 init () 方法，当 url-pattern 过滤的请求被过滤时，仅执行 doFilter (); 当程序关闭时，执行 destroy () 方法。&lt;/p&gt;
&lt;h3 id=&#34;如何在init方法中获取bean&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何在init方法中获取bean&#34;&gt;#&lt;/a&gt; 如何在 init () 方法中获取 bean：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;需求：由于所做的业务需要在 init () 方法中初始化 bean，而此时 bean 无法通过 @Autowired 注入 (注入值为 null)；&lt;/li&gt;
&lt;li&gt;解决：通过 FilterConfig 对象获取到 ApplicationContext 对象，根据 ApplicationContext 对象获取到对应的 bean。&lt;/li&gt;
&lt;li&gt;代码：&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FilterConfig filterConfig)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; ServletException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ApplicationContext app= WebApplicationContextUtils.getWebApplicationContext(filterConfig.getServletContext());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	productConfigurationHelper = (ConfigurationHelper) app.getBean(&lt;span class=&#34;string&#34;&gt;&#34;productConfigurationHelper&#34;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91]%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/</guid>
            <title>[企业微信二次开发]不同环境部署</title>
            <link>https://thesqualls.github.io/2021/06/03/[%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91]%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;企业微信会话存档功能所需的 sdk 在不同环境下的存放位置是不一样的，且在 Windows 环境下打包的 sdk 文件并不会被 maven 打包，且由于 sdk 的不同，在不同的环境下测试需要使用不同的 Finance 类，即使用不同的 Finance 静态代码块，所以对 Finance 类的静态代码块进行了修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，通过&lt;strong&gt; System.getProperty (“&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL29zLm5hbWU=&#34;&gt;os.name&lt;/span&gt;”)&lt;/strong&gt; 获取当前操作系统名称，并选用不同的 sdk：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String os = System.getProperty(&lt;span class=&#34;string&#34;&gt;&#34;os.name&#34;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (os.indexOf(&lt;span class=&#34;string&#34;&gt;&#34;Win&#34;&lt;/span&gt;)!=-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	System.loadLibrary(&lt;span class=&#34;string&#34;&gt;&#34;WeWorkFinanceSdk&#34;&lt;/span&gt;);    		&lt;span class=&#34;comment&#34;&gt;//Windows环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (os.indexOf(&lt;span class=&#34;string&#34;&gt;&#34;Linux&#34;&lt;/span&gt;)!=-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	System.loadLibrary(&lt;span class=&#34;string&#34;&gt;&#34;WeWorkFinanceSdk_Java&#34;&lt;/span&gt;);    &lt;span class=&#34;comment&#34;&gt;//linux环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;企业微信的开发案例 sdk 是直接放在项目下的，但由于 maven 打包默认不会打包 dll 文件或 so 文件，而&lt;strong&gt; System.loadLibrary&lt;/strong&gt; 方法加载库文件的路径在系统中是可以获取的，所以我们可以加 sdk 直接放到其加载的库文件的路径中去，这样就不要将 sdk 放到项目内了，只需要将 sdk 放到库文件加载路径中去就好，这里呢，由于偷了个小懒，将库文件加载路径打印了出来，直接将 sdk 复制到了该路径下，可以的话，可以将库文件放到项目内，读取到对应的库文件加载路径，将其复制或者移动进去，偷懒代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	String os = System.getProperty(&lt;span class=&#34;string&#34;&gt;&#34;os.name&#34;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (os.indexOf(&lt;span class=&#34;string&#34;&gt;&#34;Win&#34;&lt;/span&gt;)!=-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		System.loadLibrary(&lt;span class=&#34;string&#34;&gt;&#34;WeWorkFinanceSdk&#34;&lt;/span&gt;);    		&lt;span class=&#34;comment&#34;&gt;//Windows环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (os.indexOf(&lt;span class=&#34;string&#34;&gt;&#34;Linux&#34;&lt;/span&gt;)!=-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		System.loadLibrary(&lt;span class=&#34;string&#34;&gt;&#34;WeWorkFinanceSdk_Java&#34;&lt;/span&gt;);    &lt;span class=&#34;comment&#34;&gt;//linux环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	System.out.println(System.getProperty(&lt;span class=&#34;string&#34;&gt;&#34;java.library.path&#34;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//获取到对应的库文件路径，将sdk复制或移动进去，重新加载，此处代码偷懒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;catch 打印的路径有多个，只需将 sdk 复制到其中一个路径就好。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91]RSA%20PKCS1%E7%A7%81%E9%92%A5%E8%A7%A3%E5%AF%86%E8%8E%B7%E5%8F%96%E5%8A%A0%E5%AF%86%E6%B6%88%E6%81%AF%EF%BC%88JAVA%E5%AE%9E%E7%8E%B0%EF%BC%89/</guid>
            <title>[企业微信二次开发]RSA PKCS1私钥解密获取加密消息（JAVA实现）</title>
            <link>https://thesqualls.github.io/2021/06/03/[%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91]RSA%20PKCS1%E7%A7%81%E9%92%A5%E8%A7%A3%E5%AF%86%E8%8E%B7%E5%8F%96%E5%8A%A0%E5%AF%86%E6%B6%88%E6%81%AF%EF%BC%88JAVA%E5%AE%9E%E7%8E%B0%EF%BC%89/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;获取企业微信会话存档内容需要使用 RSA PKCS1 算法和私钥对获取的内容进行解密&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Java 本身是不支持 pkcs1 的，所以需要在项目中导入三个 jar 包：&lt;br&gt;
bcprov-jdk15on，bcpg-jdk16，bcpkix-jdk15on；&lt;br&gt;
版本需要根据 jdk 进行选择，此处用的 jdk 版本为 1.8；&lt;/strong&gt;&lt;br&gt;
maven 导入：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.bouncycastle&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;bcprov-jdk15on&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.64&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- Feb, 2011 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.bouncycastle&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;bcpg-jdk16&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.46&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- Oct, 2019 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.bouncycastle&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;bcpkix-jdk15on&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.64&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;企业微信首先需要将获取到的每条消息的 encrypt_random_key 内容进行 base64 decode, 得到字符串 str1，再用 publickey_ver 指定版本的私钥，使用 RSA PKCS1 算法对 str1 进行解密，但是由于私钥一开始是 PKCS8 格式的字符串，所以需要转换为 PKCS1 的格式。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String &lt;span class=&#34;title&#34;&gt;decryptRSA&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String str, String privateKey)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Security.addProvider(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; org.bouncycastle.jce.provider.BouncyCastleProvider());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Cipher rsa = Cipher.getInstance(&lt;span class=&#34;string&#34;&gt;&#34;RSA/ECB/PKCS1Padding&#34;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&#34;BC&#34;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rsa.init(Cipher.DECRYPT_MODE, getPrivateKey(privateKey));   &lt;span class=&#34;comment&#34;&gt;//getPrivateKey(privateKey):将privateKey转成pkcs1的密文形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;[] utf8 = rsa.doFinal(Base64.getDecoder().decode(str));  &lt;span class=&#34;comment&#34;&gt;//Base64.getDecoder().decode(str)：数据解密a步骤&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String result = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; String(utf8,&lt;span class=&#34;string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将字符串转化为符合要求的私钥：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; PrivateKey &lt;span class=&#34;title&#34;&gt;getPrivateKey&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(String privateKey)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	String privKeyPEMNew = privKeyPEM.replaceAll(&lt;span class=&#34;string&#34;&gt;&#34;\\n&#34;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .replace(&lt;span class=&#34;string&#34;&gt;&#34;-----BEGIN PRIVATE KEY-----&#34;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .replace(&lt;span class=&#34;string&#34;&gt;&#34;-----END PRIVATE KEY-----&#34;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;[] e = Base64.getDecoder().decode(privKeyPEMNew);   &lt;span class=&#34;comment&#34;&gt;//base64无法解析换行符,-等特殊符号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	PrivateKeyInfo pki = PrivateKeyInfo.getInstance(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	RSAPrivateKey pkcs1Key = RSAPrivateKey.getInstance(pki.parsePrivateKey());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;//RSAPrivateKeyStructure pkcs1Key = RSAPrivateKeyStructure.getInstance(pki.parsePrivateKey());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;//byte[] pkcs1Bytes = pkcs1Key.getEncoded();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;// 读取 PKCS#1的私钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;//RSAPrivateKeyStructure asn1PrivateKey = new RSAPrivateKeyStructure((ASN1Sequence) ASN1Sequence.fromByteArray(pkcs1Bytes));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;//RSAPrivateKeySpec rsaPrivateKeySpec = new RSAPrivateKeySpec(asn1PrivateKey.getModulus(),asn1PrivateKey.getPrivateExponent());   此处注释的为过时方法，同样可以完成所需的效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	RSAPrivateKeySpec rsaPrivateKeySpec = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; RSAPrivateKeySpec(pkcs1Key.getModulus(),pkcs1Key.getPrivateExponent());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;// 实例化KeyFactory对象，并指定 RSA 算法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	KeyFactory keyFactory = KeyFactory.getInstance(&lt;span class=&#34;string&#34;&gt;&#34;RSA&#34;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;// 获得 PrivateKey 对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	PrivateKey realprivateKey = keyFactory.generatePrivate(rsaPrivateKeySpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; realprivateKey;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;私钥字符串的格式&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//中间密钥内容省略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//PKCS1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; String priKey = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&#34;-----BEGIN RSA PRIVATE KEY-----\n&#34;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&#34;密钥内容，需要分行\n&#34;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&#34;-----END RSA PRIVATE KEY-----&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//PKCS8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; String priKey = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&#34;-----BEGIN PRIVATE KEY-----\n&#34;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&#34;密钥内容，需要分行\n&#34;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&#34;-----END PRIVATE KEY-----&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9iYWlfX18xMTEvYXJ0aWNsZS9kZXRhaWxzLzEwNTExMzAyMg==&#34;&gt;https://blog.csdn.net/xiaobai___111/article/details/105113022&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vTGl1WWFuWUdaL3AvMTI1MTkwMDEuaHRtbA==&#34;&gt;https://www.cnblogs.com/LiuYanYGZ/p/12519001.html&lt;/span&gt;&lt;br&gt;
 相关测试网站：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5tZXRvb2xzLmluZm8vY29kZS9jODUuaHRtbA==&#34;&gt;http://www.metools.info/code/c85.html&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS90b29scy9iYXNlNjQuYXNweA==&#34;&gt;http://tool.chinaz.com/tools/base64.aspx&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[vue]%E5%B8%B8%E8%A7%81%E6%A6%82%E5%BF%B5/</guid>
            <title>[vue]常见概念</title>
            <link>https://thesqualls.github.io/2021/06/03/[vue]%E5%B8%B8%E8%A7%81%E6%A6%82%E5%BF%B5/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;什么是 vue 的生命周期？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vue 实例从创建到销毁的过程，就是 vue 的生命周期。也就是从开始创建、初始化数据、编译模板、挂载 dom - 渲染、更新 - 渲染、卸载等一系列的过程，这个过程称之为 vue 的生命周期。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;vue 有哪些钩子函数？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;beforecreate：创建前方法：dom、methods、data 都无法获取&lt;/li&gt;
&lt;li&gt;created：创建后方法：dom 无法获取；methods、data 可以获取；&lt;/li&gt;
&lt;li&gt;beforemount：载入前方法：dom 无法获取；methods、data、el 可以获取；&lt;/li&gt;
&lt;li&gt;mountd：载入后方法：dom、methods、data 都可以获取&lt;/li&gt;
&lt;li&gt;breforeupdate：更新前方法&lt;/li&gt;
&lt;li&gt;updated：更新后方法&lt;/li&gt;
&lt;li&gt;beforedestory：销毁前方法&lt;/li&gt;
&lt;li&gt;destoryed：销毁后方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;dom 渲染在哪个周期完成？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mounted 中完成&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[redis]spring%E6%95%B4%E5%90%88redis/</guid>
            <title>[redis]spring整合redis</title>
            <link>https://thesqualls.github.io/2021/06/03/[redis]spring%E6%95%B4%E5%90%88redis/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;两种：spring 整合 redis，springboot 整合 redis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;spring整合redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spring整合redis&#34;&gt;#&lt;/a&gt; spring 整合 redis：&lt;/h2&gt;
&lt;h3 id=&#34;1-环境及jar包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-环境及jar包&#34;&gt;#&lt;/a&gt; 1、环境及 jar 包：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;环境：jdk1.6；spring+springmvc+ibatis+maven；redis3.2；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pom.xml：&lt;/p&gt;
  &lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.data&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-data-redis&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.7.1.RELEASE&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;redis.clients&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jedis&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.8.1&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不使用 maven 可以自行下载 jar 包，复制到项目中：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS9hcnRpZmFjdC9vcmcuc3ByaW5nZnJhbWV3b3JrLmRhdGEvc3ByaW5nLWRhdGEtcmVkaXMvMS43LjEuUkVMRUFTRQ==&#34;&gt;jar 下载 1&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS9hcnRpZmFjdC9yZWRpcy5jbGllbnRzL2plZGlzLzIuOC4x&#34;&gt;jar 下载 2&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-编写redis配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-编写redis配置文件&#34;&gt;#&lt;/a&gt; 2、编写 redis 配置文件：&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#redis配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.host=使用的redis主机地址，本地redis即&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.port=redis服务的端口，默认为&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.password=redis服务密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.timeout=redis客户端超过该空闲时间会断开&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多详细配置参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbWV0dS9wLzk2MDk2MDQuaHRtbA==&#34;&gt;https://www.cnblogs.com/metu/p/9609604.html&lt;/span&gt;&lt;br&gt;
 文件名可任取，后缀为 properties&lt;/p&gt;
&lt;h3 id=&#34;3-spring容器中注入redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-spring容器中注入redis&#34;&gt;#&lt;/a&gt; 3、spring 容器中注入 redis：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在 spring 的配置 xml 中引入 redis 配置文件：  &lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;propertyConfigurer&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;locations&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;list&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;classpath:redis.properties&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;list&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200910151642915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/li&gt;
&lt;li&gt;配置 jedis 连接池 (可不配，使用默认)：  &lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jedisPoolConfig&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;redis.clients.jedis.JedisPoolConfig&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- &amp;lt;property name=&#34;maxIdle&#34; value=&#34;$&amp;#123;spring.redis.jedis.pool.max-idle&amp;#125;&#34; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  	&amp;lt;property name=&#34;maxTotal&#34; value=&#34;$&amp;#123;redis.maxTotal&amp;#125;&#34; /&amp;gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  	&amp;lt;property name=&#34;maxWaitMillis&#34; value=&#34;$&amp;#123;redis.maxWaitMillis&amp;#125;&#34; /&amp;gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  	&amp;lt;property name=&#34;testOnBorrow&#34; value=&#34;$&amp;#123;redis.testOnBorrow&amp;#125;&#34; /&amp;gt; --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;配置 jedis 连接：  &lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jedisConnectionFactory&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;destroy-method&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;destroy&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;usePool&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;true&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;hostName&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$&amp;#123;spring.redis.host&amp;#125;&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;port&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$&amp;#123;spring.redis.port&amp;#125;&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;timeout&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$&amp;#123;spring.redis.timeout&amp;#125;&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;password&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;$&amp;#123;spring.redis.password&amp;#125;&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;poolConfig&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jedisPoolConfig&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;配置 redisTemplate 及序列化：  &lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;redisTemplate&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.data.redis.core.RedisTemplate&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;connectionFactory&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;jedisConnectionFactory&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;keySerializer&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;stringSerializer&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- &amp;lt;property name=&#34;valueSerializer&#34; ref=&#34;stringSerializer&#34;&amp;gt;&amp;lt;/property&amp;gt; --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;hashKeySerializer&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;stringSerializer&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;hashValueSerializer&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;stringSerializer&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;stringSerializer&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.data.redis.serializer.StringRedisSerializer&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-调用redistemplate进行操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-调用redistemplate进行操作&#34;&gt;#&lt;/a&gt; 4、调用 redisTemplate 进行操作：&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; RedisTemplate redisTemplate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@RequestMapping&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&#34;redistest.do&#34;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Set &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Set&amp;lt;ZSetOperations.TypedTuple&amp;lt;String&amp;gt;&amp;gt; listset = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; LinkedHashSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ZSetOperations.TypedTuple&amp;lt;String&amp;gt; objectTypedTuple1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; DefaultTypedTuple&amp;lt;String&amp;gt;(&lt;span class=&#34;string&#34;&gt;&#34;test1&#34;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ZSetOperations.TypedTuple&amp;lt;String&amp;gt; objectTypedTuple2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; DefaultTypedTuple&amp;lt;String&amp;gt;(&lt;span class=&#34;string&#34;&gt;&#34;test2&#34;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	listset.add(objectTypedTuple1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	listset.add(objectTypedTuple2); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	redisTemplate.setValueSerializer(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; StringRedisSerializer());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	redisTemplate.opsForZSet().add(GaotimeConstants.DEFAULT_MENU_KEY, listset);&lt;span class=&#34;comment&#34;&gt;//新增有序hash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Set&amp;lt;HashMap&amp;gt; listresult = redisTemplate.opsForZSet().range(INFOPRODUCT_MENU_KEY, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, redisTemplate.opsForZSet().size(INFOPRODUCT_MENU_KEY));  &lt;span class=&#34;comment&#34;&gt;//查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	redisTemplate.opsForZSet().removeRange(INFOPRODUCT_MENU_KEY, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, redisTemplate.opsForZSet().size(INFOPRODUCT_MENU_KEY));  &lt;span class=&#34;comment&#34;&gt;//删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	System.out.println(redisTemplate.opsForZSet().size(INFOPRODUCT_MENU_KEY));  &lt;span class=&#34;comment&#34;&gt;//打印长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此外，还有更多操作的 api，也就不一 一列举了。&lt;/p&gt;
&lt;h2 id=&#34;springboot整合redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#springboot整合redis&#34;&gt;#&lt;/a&gt; springboot 整合 redis：&lt;/h2&gt;
&lt;h3 id=&#34;1-环境及jar包-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-环境及jar包-2&#34;&gt;#&lt;/a&gt; 1、环境及 jar 包：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;环境：jdk1.8+springboot (2.1.11.RELEASE)+es6+mybatis+redis3.2&lt;/li&gt;
&lt;li&gt;pom.xml：  &lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.11.RELEASE&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;relativePath&lt;/span&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- lookup parent from repository --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-data-redis&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-配置redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-配置redis&#34;&gt;#&lt;/a&gt; 2、配置 redis：&lt;/h3&gt;
&lt;p&gt;在 application.yml 或者 application.properties 中配置：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#redis数据库索引(默认为0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.database=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.host=172.18.1.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.port=6379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.password=!ZykUGb8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#连接池最大连接数(使用负数表示没有限制)默认8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.jedis.pool.max-active=10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.jedis.pool.max-idle=10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.jedis.pool.min-idle=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.redis.timeout=6000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3-编写redistemplate的bean配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-编写redistemplate的bean配置&#34;&gt;#&lt;/a&gt; 3、编写 redistemplate 的 bean 配置：&lt;/h3&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import com.fasterxml.jackson.annotation.JsonAutoDetect;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import com.fasterxml.jackson.annotation.PropertyAccessor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import com.fasterxml.jackson.databind.ObjectMapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.springframework.context.annotation.Bean;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.springframework.context.annotation.Configuration;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.springframework.data.redis.connection.RedisConnectionFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.springframework.data.redis.core.RedisTemplate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.springframework.data.redis.serializer.StringRedisSerializer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class RedisConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	@Bean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	@SuppressWarnings(&#34;all&#34;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public RedisTemplate&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;String,&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt; redisTemplate(RedisConnectionFactory factory) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RedisTemplate&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;String,&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt; template = new RedisTemplate&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;String,&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        template.setConnectionFactory(factory);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ObjectMapper om = new ObjectMapper();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jackson2JsonRedisSerializer.setObjectMapper(om);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        template.setKeySerializer(stringRedisSerializer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        template.setHashKeySerializer(stringRedisSerializer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        template.setValueSerializer(jackson2JsonRedisSerializer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        template.setHashValueSerializer(jackson2JsonRedisSerializer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        template.afterPropertiesSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return template;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4-调用redistemplate进行操作-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-调用redistemplate进行操作-2&#34;&gt;#&lt;/a&gt; 4、调用 redisTemplate 进行操作：&lt;/h3&gt;
&lt;p&gt;如上述第 4 部分一致。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[oracle]oracle%E6%89%B9%E9%87%8F%E5%88%A4%E6%96%AD%E6%8F%92%E5%85%A5%E8%BF%98%E6%98%AF%E6%9B%B4%E6%96%B0/</guid>
            <title>[oracle]oracle批量判断插入还是更新</title>
            <link>https://thesqualls.github.io/2021/06/03/[oracle]oracle%E6%89%B9%E9%87%8F%E5%88%A4%E6%96%AD%E6%8F%92%E5%85%A5%E8%BF%98%E6%98%AF%E6%9B%B4%E6%96%B0/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;为了不影响程序性能，想要将一批数据批量加入到 oracle，但是有些数据在新增的同时又需要判断是否存在与该数据用户账号和用户部门相同的数据，如果存在，就只对该数据进行更新，而不新增，如果不存在，就新增。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注：这里使用的持久层框架为 ibatis&lt;/p&gt;
&lt;h3 id=&#34;为了实现该功能需要用到oracle的merge-into语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#为了实现该功能需要用到oracle的merge-into语法&#34;&gt;#&lt;/a&gt; 为了实现该功能，需要用到 oracle 的 merge into 语法：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va29uZ3hjL3AvOTIzNzk0MS5odG1s&#34;&gt;oracle 中 merge into 用法解析&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;注意&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用该语法时，无论是 update 还是 insert 后面都不需要加表名去声明，且 insert 后面也不需要加 into，不然就会报错，缺少关键字：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200909174704887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 insert 后面的所需增加的字段名也不需要采用：表名。字段名的形式，直接用小括号将字段名扩起来就可以了；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 insert 的时候 values 后面的值，一定要采用：表名。字段名的形式，否则会报列无效：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200909175105288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果报错标识符无效，需要使用 as 起别名：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200909175313214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果只有一条数据，迭代器迭代的时候 conjunction 属性为 &amp;quot;&amp;quot; 并不会影响程序运行，但是数据在两条及两条以上，需要设置该属性为 conjunction=“union”，否则会报错：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200909175716431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;完整mapper映射&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完整mapper映射&#34;&gt;#&lt;/a&gt; 完整 Mapper 映射：&lt;/h3&gt;
&lt;p&gt;Mapper.xml：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;statement&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;insertSysDayClicks&#34;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;parameterClass&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;java.util.List&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		merge into sys_day_click u&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		using&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;iterate&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;conjunction&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;union&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				select #List[].usercode# as usercode,#List[].username# as username,#List[].usertype# as usertype,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				#List[].deptcode# as deptcode,#List[].stime# as stime,#List[].clickcount# as clickcount from dual&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;iterate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		) t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		on (u.usercode = t.usercode and u.stime = t.stime and u.deptcode = t.deptcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		when matched then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			update set u.clickcount = t.clickcount&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		when not matched then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			insert (usercode, username, usertype, deptcode, stime, clickcount) VALUES(t.usercode, t.username, t.usertype, t.deptcode, t.stime, t.clickcount)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;statement&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Mapper.java：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;insertSysDayClicks&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(List&amp;lt;HashMap&amp;gt; dayCountEntityList)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.getSqlMapClientTemplate().queryForObject(&lt;span class=&#34;string&#34;&gt;&#34;insertSysDayClicks&#34;&lt;/span&gt;, dayCountEntityList);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Constants.CODE_DAO_SUCCESS;   &lt;span class=&#34;comment&#34;&gt;//返回的状态值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;span style=&#34;color: red&#34;&gt;该 Mapper.xml 的映射标签不可以写成 insert, 会报错&lt;/span&gt;：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200909180134927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
如果需要使用 insert 标签，需要改写 Mapper.java：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;insertSysDayClicks&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(List&amp;lt;HashMap&amp;gt; dayCountEntityList)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.getSqlMapClientTemplate().insert(&lt;span class=&#34;string&#34;&gt;&#34;insertSysDayClicks&#34;&lt;/span&gt;, dayCountEntityList);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Constants.CODE_DAO_SUCCESS;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考博文：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd3V4dW4xOTk3L3AvNjYwMjIwMi5odG1s&#34;&gt;https://www.cnblogs.com/wuxun1997/p/6602202.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FpbmNpZG9uZy9hcnRpY2xlL2RldGFpbHMvNDA0MzE2MjU=&#34;&gt;https://blog.csdn.net/qincidong/article/details/40431625&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va29uZ3hjL3AvOTIzNzk0MS5odG1s&#34;&gt;https://www.cnblogs.com/kongxc/p/9237941.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpYW53YWlsYWliaW4vYXJ0aWNsZS9kZXRhaWxzLzgyNDk2NjM=&#34;&gt;https://blog.csdn.net/tianwailaibin/article/details/8249663&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpbmdqaWFud3UvYXJ0aWNsZS9kZXRhaWxzLzgxNDU1Nzc2&#34;&gt;https://blog.csdn.net/xingjianwu/article/details/81455776&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hvbmcxMDA4Ni9hcnRpY2xlL2RldGFpbHMvNTQzNDI4MTk=&#34;&gt;https://blog.csdn.net/hong10086/article/details/54342819&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[oracle]ORA-00600_%20internal%20error%20code,%20arguments_%20[qcsfbdnp_1],%20[],%20[],%20[],%20[],%20[],%20[],%20[]/</guid>
            <title>[oracle]ORA-00600_ internal error code, arguments_ [qcsfbdnp_1], [], [], [], [], [], [], []</title>
            <link>https://thesqualls.github.io/2021/06/03/[oracle]ORA-00600_%20internal%20error%20code,%20arguments_%20[qcsfbdnp_1],%20[],%20[],%20[],%20[],%20[],%20[],%20[]/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;此贴讲该错误和网上的大部分不同，此错误是在特定的技术栈框架下触发的。这里的 SQL 通过 ibatis 编写时并不会报错，而仅仅是在 mybatis 框架下编写才会产生报错。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1、mybatis 采用注解使用 merge into 对多条数据进行操作：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223150131772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/li&gt;
&lt;li&gt;2、由于需要过滤一下 U 表，增加过滤条件：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223150241278.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/li&gt;
&lt;li&gt;3、这个时候就报错了：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223150422653.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/li&gt;
&lt;li&gt;4、此刻很明显的可以定位产生此错误的原因，就是传入参数对 U 表进行过滤的语句；&lt;/li&gt;
&lt;li&gt;5、使用自定义的 provider 类构造 SQL 语句返回执行：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223151220383.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223151249173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
并不会报错，接着手动将数据编入 SQL 通过 oracle 客户端执行，执行成功，由此可以判断想要执行的 SQL 语法上是没有问题的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决&#34;&gt;#&lt;/a&gt; 解决&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1、判断是不是此处不可以使用子查询，修改 SQL，不传入参数：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223150721128.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
执行该查询，发现并不会报错，由此可以推断，此处并不是子查询的问题，而是通过 mybatis 框架传参导致的问题；&lt;/li&gt;
&lt;li&gt;2、判断是不是由于预编译的原因而导致的问题，使用 $ 符合拼接的方式来创建 SQL：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223152248294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
执行报错：&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223152311611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
很明显，缺少引号所致，修改 SQL，添加引号：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223152404217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
执行成功：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223152619306.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
由此可以发现拼接时需要拼上引号才能实现，推断预编译时是否也缺少引号；&lt;/li&gt;
&lt;li&gt;3、使用 #传参时也加上引号：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20210223152929919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;报错，由此可以发现参数列与实际接收的参数都不一样了，所以不能通过加引号的方式去解决，查找资料，有人说是 oracle 的 bug，有人说将数据库表的 CURSOR_SHARING = force 注释掉就行了，还有人说与绑定变量有关等等一系列的说法，但通过上述的分析与测验，只能归结于 mybatis 在预编译的时候产生的问题，毕竟在我用 mybatis 的前身 ibatis 时并不会产生此问题，一时半会也无新的解决思路，上述也提到了两种解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用自定义 provider 类构造 SQL 语句返回执行；&lt;/li&gt;
&lt;li&gt;采用引号 +$ 符号拼接的方式将数据传入 SQL 执行；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这两种方案都是可行的，至于使用预编译为何无法执行的问题只能待以后有新的思路再来解决了。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[Spring%E9%A2%84%E5%8A%A0%E8%BD%BD]InitializingBean%E6%8E%A5%E5%8F%A3/</guid>
            <title>[Spring预加载]InitializingBean接口</title>
            <link>https://thesqualls.github.io/2021/06/03/[Spring%E9%A2%84%E5%8A%A0%E8%BD%BD]InitializingBean%E6%8E%A5%E5%8F%A3/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;很多时候我们程序要查询的数据量太大了，无论怎么进行 SQL 优化，查询的时间仍可能达到数秒，这个时候对于用户的体验就是非常不好的，这个时候我们就可以采用预加载的方法，在 Web 容器启动时加载相应的数据查询方法，将得到的数据放入缓存，这样当用户来请求数据的时候，我们就可以将缓存中的数据返回给用户，从而提高用户体验。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实现 InitializingBean 接口是实现 Spring 预加载的采用手段，实现流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建一个 bean (注：InitializingBean 接口是基于 bean 实现的)，实现 InitializingBean 接口，重写 afterPropertiesSet 方法：&lt;/p&gt;
  &lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;DemoCache&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;InitializingBean&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;afterPropertiesSet&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里，afterPropertiesSet 方法是 Web 容器启动会执行的方法，所以我们就可以在该方法内写入我们的初始化方法内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加入初始化方法：&lt;/p&gt;
  &lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;DemoCache&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;InitializingBean&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;afterPropertiesSet&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//写入想要随容器启动的查询语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注入 bean 到容器中：&lt;br&gt;
由于 InitializingBean 接口是基于 bean 实现的，所以我们编写的 bean 要注入到 Spring 容器中，这样我们重写的 afterPropertiesSet 方法就会被 Spring 容器扫描并执行：&lt;/p&gt;
  &lt;figure class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;beans xmlns=&lt;span class=&#34;string&#34;&gt;&#34;http://www.springframework.org/schema/beans&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmlns:xsi=&lt;span class=&#34;string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt; xmlns:p=&lt;span class=&#34;string&#34;&gt;&#34;http://www.springframework.org/schema/p&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmlns:tx=&lt;span class=&#34;string&#34;&gt;&#34;http://www.springframework.org/schema/tx&#34;&lt;/span&gt; xmlns:aop=&lt;span class=&#34;string&#34;&gt;&#34;http://www.springframework.org/schema/aop&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmlns:context=&lt;span class=&#34;string&#34;&gt;&#34;http://www.springframework.org/schema/context&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xsi:schemaLocation=&lt;span class=&#34;string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	       http://www.springframework.org/schema/beans &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;           http://www.springframework.org/schema/tx &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;           http://www.springframework.org/schema/context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;           http://www.springframework.org/schema/context/spring-context-3.0.xsd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;           http://www.springframework.org/schema/aop &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd&#34;&lt;/span&gt;&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;bean id=&lt;span class=&#34;string&#34;&gt;&#34;demoCache&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;com.gaotime.info.product.web.cache.DemoCache&#34;&lt;/span&gt;/&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样我们的初始化方法就会被执行了，但是这样仅仅只是执行了一遍，下次用户来请求的时候仍然要执行查询方法，这样我们的查询貌似就没有任何意义了呀，所以我们需要将我们得到的结果存入到缓存中，当用户下次来请求时，就可以直接访问缓存中的数据，提升用户体验：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法一：直接在 afterPropertiesSet 方法内将得到的结果集存入缓存，这里就仅提供思路了，并不累赘多余的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法二：当我们要初始化的类太多，每一个 afterPropertiesSet 方法都需要写一遍存入缓存的语句太麻烦，这个时候我们就可以用到 AOP 的后置通知处理了。&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlamluZ3l1YW42L2FydGljbGUvZGV0YWlscy80NDI3OTIzOT91dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnQubm9uZS10YXNrLWJsb2ctYmFpZHVqcy0x&#34;&gt;Spring AOP 应用实例&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法三：xml 配置拦截，实际上原理和 aop 是一样的：&lt;/p&gt;
  &lt;figure class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;bean id=&lt;span class=&#34;string&#34;&gt;&#34;cacheManagerFactory&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.cache.ehcache.EhCacheManagerFactoryBean&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		p:configLocation=&lt;span class=&#34;string&#34;&gt;&#34;classpath:/cache/ehcache.xml&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;!-- cacheManager工厂类，指定ehcache.xml的位置 --&amp;gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;bean id=&lt;span class=&#34;string&#34;&gt;&#34;cacheManagerFactory&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.cache.ehcache.EhCacheManagerFactoryBean&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		p:configLocation=&lt;span class=&#34;string&#34;&gt;&#34;classpath:/cache/ehcache.xml&#34;&lt;/span&gt; /&amp;gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;!-- 声明cacheManager --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;bean id=&lt;span class=&#34;string&#34;&gt;&#34;cacheManager&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.cache.ehcache.EhCacheCacheManager&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		p:cacheManager-ref=&lt;span class=&#34;string&#34;&gt;&#34;cacheManagerFactory&#34;&lt;/span&gt; /&amp;gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;bean id=&lt;span class=&#34;string&#34;&gt;&#34;lowFreCache&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.cache.ehcache.EhCacheFactoryBean&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;lt;property name=&lt;span class=&#34;string&#34;&gt;&#34;cacheManager&#34;&lt;/span&gt; ref=&lt;span class=&#34;string&#34;&gt;&#34;cacheManagerFactory&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;lt;property name=&lt;span class=&#34;string&#34;&gt;&#34;cacheName&#34;&lt;/span&gt; value=&lt;span class=&#34;string&#34;&gt;&#34;lowFreCache&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;bean id=&lt;span class=&#34;string&#34;&gt;&#34;lowFreMethodCacheInterceptor&#34;&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;com.gaotime.info.product.web.util.MethodCacheInterceptor&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;lt;property name=&lt;span class=&#34;string&#34;&gt;&#34;cache&#34;&lt;/span&gt; ref=&lt;span class=&#34;string&#34;&gt;&#34;lowFreCache&#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;bean id=&lt;span class=&#34;string&#34;&gt;&#34;lowFreMethodCachePointCut&#34;&lt;/span&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&#34;org.springframework.aop.support.RegexpMethodPointcutAdvisor&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;lt;property name=&lt;span class=&#34;string&#34;&gt;&#34;advice&#34;&lt;/span&gt; ref=&lt;span class=&#34;string&#34;&gt;&#34;lowFreMethodCacheInterceptor&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;lt;property name=&lt;span class=&#34;string&#34;&gt;&#34;patterns&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;lt;list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				 &amp;lt;value&amp;gt;com.lr.service.impl.DemoServiceImpl\.getCount&amp;lt;/value&amp;gt;		&amp;lt;!--拦截的方法  --&amp;gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;lt;/list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注：这里用的 ehcache。&lt;/p&gt;
  &lt;figure class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;ehcache xmlns:xsi=&lt;span class=&#34;string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xsi:noNamespaceSchemaLocation=&lt;span class=&#34;string&#34;&gt;&#34;ehcache.xsd&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	updateCheck=&lt;span class=&#34;string&#34;&gt;&#34;true&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	monitoring=&lt;span class=&#34;string&#34;&gt;&#34;autodetect&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;!--&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		On Windows: java.io.tmpdir:[C:\DOCUME~&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;\joshua\LOCALS~&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;\Temp\]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		On Solaris: java.io.tmpdir:[/&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt;/tmp/]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		On Linux: java.io.tmpdir: [/tmp]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		On Mac OS X: java.io.tmpdir: [/tmp]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;diskStore path=&lt;span class=&#34;string&#34;&gt;&#34;d:/cache&#34;&lt;/span&gt;/&amp;gt;--&amp;gt; &amp;lt;!--使用该标签可以将数据存储至磁盘  --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;diskStore path=&lt;span class=&#34;string&#34;&gt;&#34;java.io.tmpdir/ehcache&#34;&lt;/span&gt; /&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	 &amp;lt;!-- 定义缓存时间--&amp;gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;lt;cache name=&lt;span class=&#34;string&#34;&gt;&#34;lowFreCache&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		maxElementsInMemory=&lt;span class=&#34;string&#34;&gt;&#34;100000&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		maxElementsOnDisk=&lt;span class=&#34;string&#34;&gt;&#34;500000&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		eternal=&lt;span class=&#34;string&#34;&gt;&#34;false&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		overflowToDisk=&lt;span class=&#34;string&#34;&gt;&#34;true&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		diskPersistent=&lt;span class=&#34;string&#34;&gt;&#34;false&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		diskSpoolBufferSizeMB=&lt;span class=&#34;string&#34;&gt;&#34;30&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		timeToIdleSeconds=&lt;span class=&#34;string&#34;&gt;&#34;900&#34;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		timeToLiveSeconds=&lt;span class=&#34;string&#34;&gt;&#34;900&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		memoryStoreEvictionPolicy=&lt;span class=&#34;string&#34;&gt;&#34;LFU&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/ehcache&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/[JSMind]%E4%BD%BF%E7%94%A8JSMind%E6%93%8D%E4%BD%9C%E7%94%9F%E6%88%90%E7%9A%84%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</guid>
            <title>[JSMind]使用JSMind操作生成的思维导图</title>
            <link>https://thesqualls.github.io/2021/06/03/[JSMind]%E4%BD%BF%E7%94%A8JSMind%E6%93%8D%E4%BD%9C%E7%94%9F%E6%88%90%E7%9A%84%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;使用 JSMind 创建思维导图的 JS 代码，但是浏览器执行起来可能较慢，所以后面此代码还是改到后端了，但毕竟是一部时间的努力成果，留个纪念&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;html xmlns=&lt;span class=&#34;string&#34;&gt;&#34;http://www.w3.org/1999/xhtml&#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;meta http-equiv=&lt;span class=&#34;string&#34;&gt;&#34;Content-Type&#34;&lt;/span&gt; content=&lt;span class=&#34;string&#34;&gt;&#34;text/html; charset=utf-8&#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;title&amp;gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/title&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;style type=&#34;text/&lt;/span&gt;css&lt;span class=&#34;string&#34;&gt;&#34;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	.countday &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		border: 1px solid yellow;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		color: yellow&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	.span-black &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		color: black&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	.span-green &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		color: green&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	.span-red &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		color: red&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	.root&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		padding: 9px 12px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	&amp;lt;div id=&#34;&lt;/span&gt;jsmind_container&lt;span class=&#34;string&#34;&gt;&#34; style=&#34;&lt;/span&gt;width: &lt;span class=&#34;number&#34;&gt;1100&lt;/span&gt;px; height: &lt;span class=&#34;number&#34;&gt;800&lt;/span&gt;px&lt;span class=&#34;string&#34;&gt;&#34;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;$(document).ready(function()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	$(&#34;#inputtext&#34;).hide();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mind = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&#34;meta&#34;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&#34;name&#34;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#34;龙虎榜&#34;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&#34;author&#34;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#34;liurui&#34;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&#34;version&#34;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&#34;format&#34;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#34;node_tree&#34;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&#34;data&#34;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&#34;id&#34;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&#34;root&#34;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&#34;expanded&#34;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;/* &#34;topic&#34;: &#34;&amp;lt;span class=&#39;span-root&#39;&amp;gt;龙虎榜&amp;lt;/sapn&amp;gt;&#34;, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;			&#34;font-size&#34;: 26,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;			&#34;background-color&#34;: &#34;rgb(16,1,1)&#34; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; options = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    container:&lt;span class=&#34;string&#34;&gt;&#39;jsmind_container&#39;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;//容器的ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    editable:&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,				&lt;span class=&#34;comment&#34;&gt;// 是否启用编辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    theme:&lt;span class=&#34;string&#34;&gt;&#39;primary&#39;&lt;/span&gt;	,			&lt;span class=&#34;comment&#34;&gt;//主题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    view:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        engine: &lt;span class=&#34;string&#34;&gt;&#39;canvas&#39;&lt;/span&gt;,   &lt;span class=&#34;comment&#34;&gt;// 思维导图各节点之间线条的绘制引擎&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        hmargin:&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;,        &lt;span class=&#34;comment&#34;&gt;// 思维导图距容器外框的最小水平距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        vmargin:&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;,         &lt;span class=&#34;comment&#34;&gt;// 思维导图距容器外框的最小垂直距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        line_width:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,       &lt;span class=&#34;comment&#34;&gt;// 思维导图线条的粗细&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        line_color:&lt;span class=&#34;string&#34;&gt;&#39;#555&#39;&lt;/span&gt;   &lt;span class=&#34;comment&#34;&gt;// 思维导图线条的颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    layout:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        hspace:&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,          &lt;span class=&#34;comment&#34;&gt;// 节点之间的水平间距&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        vspace:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,          &lt;span class=&#34;comment&#34;&gt;// 节点之间的垂直间距&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        pspace:&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;           &lt;span class=&#34;comment&#34;&gt;// 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    shortcut:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        enable:&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;        &lt;span class=&#34;comment&#34;&gt;// 是否启用快捷键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; jm = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; jsMind(options);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	jm.show(mind);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	jm.set_node_background_image(&lt;span class=&#34;string&#34;&gt;&#34;root&#34;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&#34;images/img/lhb.png&#34;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;78&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	$(&lt;span class=&#34;string&#34;&gt;&#34;.root&#34;&lt;/span&gt;).css(&lt;span class=&#34;string&#34;&gt;&#34;background-size&#34;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&#34;100%&#34;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// if(jm.get_root().children.length==0)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// var html = &#34;&amp;lt;table class=&#39;table_list&#39; border=&#39;0&#39; cellspacing=&#39;1&#39; cellpadding=&#39;0&#39;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&#34;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// html += &#34;&amp;lt;div style=&#39;clear: both; min-height: 100px;&#39; id=&#39;main&#39;&amp;gt;&amp;lt;div style=&#39;height: 10px;&#39;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&#39;nullcontent_div&#39;&amp;gt;没有查询到相关信息！&amp;lt;/div&amp;gt;&#34;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// html += &#34;&amp;lt;/tr&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/table&amp;gt;&#34;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// $(&#34;#jsmind_container&#34;).html(html);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; data = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&#39;$&amp;#123;data&amp;#125;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	$.each(data,&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i, list&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; ls = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(list);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; nodeid = jsMind.util.uuid.newid();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic = ls[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].yzname;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; parent_node = jm.get_root();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; node = jm.add_node(parent_node, nodeid, topic);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		jm.set_node_color(nodeid,&lt;span class=&#34;string&#34;&gt;&#39;#0872c6&#39;&lt;/span&gt;,&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		jm.set_node_font_style(nodeid, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		jm.get_node(nodeid).direction = ls[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].fx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		$.each(ls,&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;j, obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; ls2 = &lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; nodeid2 = jsMind.util.uuid.newid();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ls2.sbuy = ls2.sbuy + &lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.sbuy&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.sbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.sbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)).length&amp;gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					ls2.sbuy = (&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.sbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.sbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,(&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.sbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.sbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.a==&lt;span class=&#34;string&#34;&gt;&#39;3&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;countday&#39;&amp;gt;&amp;lt;strong&amp;gt;3日&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&#34;&lt;/span&gt;+ls2.secuabbr+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;亿&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = ls2.secuabbr+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;亿&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.a==&lt;span class=&#34;string&#34;&gt;&#39;3&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;countday&#39;&amp;gt;&amp;lt;strong&amp;gt;3日&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&#34;&lt;/span&gt;+ls2.secuabbr+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;万&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = ls2.secuabbr+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;万&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.sbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.sbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)).length&amp;gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					ls2.sbuy = (&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.sbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.sbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,(&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.sbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.sbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.a==&lt;span class=&#34;string&#34;&gt;&#39;3&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;countday&#39;&amp;gt;&amp;lt;strong&amp;gt;3日&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&#34;&lt;/span&gt;+ls2.secuabbr+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;亿&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = ls2.secuabbr+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;亿&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.a==&lt;span class=&#34;string&#34;&gt;&#39;3&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;countday&#39;&amp;gt;&amp;lt;strong&amp;gt;3日&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&#34;&lt;/span&gt;+ls2.secuabbr+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;万&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic2 = ls2.secuabbr+&lt;span class=&#34;string&#34;&gt;&#34;+&#34;&lt;/span&gt;+ls2.sbuy+&lt;span class=&#34;string&#34;&gt;&#34;万&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; node2 = jm.add_node(node, nodeid2, topic2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.sbuy&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				jm.set_node_color(nodeid2,&lt;span class=&#34;string&#34;&gt;&#39;#2fb33b&#39;&lt;/span&gt;,&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;//jm.set_node_color(nodeid2,&#39;#a82829&#39;,null);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				jm.set_node_color(nodeid2,&lt;span class=&#34;string&#34;&gt;&#39;red&#39;&lt;/span&gt;,&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			jm.set_node_font_style(nodeid2, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; nodeid3 = jsMind.util.uuid.newid();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ls2.dbuy = ls2.dbuy + &lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.dbuy&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.dbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.dbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)).length&amp;gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					ls2.dbuy = (&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.dbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.dbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,(&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.dbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.dbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic3 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;span-black&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.deptname+&lt;span class=&#34;string&#34;&gt;&#34;&amp;amp;nbsp;&amp;lt;span class=&#39;span-green&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.dbuy+&lt;span class=&#34;string&#34;&gt;&#34;亿&amp;lt;/span&amp;gt;&#34;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span&amp;gt;&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic3 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;span-black&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.deptname+&lt;span class=&#34;string&#34;&gt;&#34;&amp;amp;nbsp;&amp;lt;span class=&#39;span-green&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.dbuy+&lt;span class=&#34;string&#34;&gt;&#34;万&amp;lt;/span&amp;gt;&#34;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span&amp;gt;&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(ls2.dbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.dbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)).length&amp;gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					ls2.dbuy = (&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.dbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.dbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,(&lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(ls2.dbuy.substring(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ls2.dbuy.indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)))/&lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;).toString().indexOf(&lt;span class=&#34;string&#34;&gt;&#39;.&#39;&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic3 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;span-black&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.deptname+&lt;span class=&#34;string&#34;&gt;&#34;&amp;amp;nbsp;+&amp;lt;span class=&#39;span-red&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.dbuy+&lt;span class=&#34;string&#34;&gt;&#34;亿&amp;lt;/span&amp;gt;&#34;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span&amp;gt;&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; topic3 = &lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span class=&#39;span-black&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.deptname+&lt;span class=&#34;string&#34;&gt;&#34;&amp;amp;nbsp;+&amp;lt;span class=&#39;span-red&#39;&amp;gt;&#34;&lt;/span&gt;+ls2.dbuy+&lt;span class=&#34;string&#34;&gt;&#34;万&amp;lt;/span&amp;gt;&#34;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&#34;&amp;lt;span&amp;gt;&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; node3 = jm.add_node(node2, nodeid3, topic3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			jm.set_node_font_style(nodeid3, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			jm.set_node_color(nodeid3,&lt;span class=&#34;string&#34;&gt;&#39;#f0f5f9&#39;&lt;/span&gt;,&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	jm.disable_edit();  &lt;span class=&#34;comment&#34;&gt;//禁止编辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&lt;span class=&#34;regexp&#34;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;regexp&#34;&gt;&amp;lt;/&lt;/span&gt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/Springboot%E6%95%B4%E5%90%88jpa%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E6%8A%A5%E9%94%99%EF%BC%9AAt%20least%20one%20JPA%20metamodel%20must%20be%20present/</guid>
            <title>Springboot整合jpa使用实体类生成数据库表报错：At least one JPA metamodel must be present</title>
            <link>https://thesqualls.github.io/2021/06/03/Springboot%E6%95%B4%E5%90%88jpa%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E6%8A%A5%E9%94%99%EF%BC%9AAt%20least%20one%20JPA%20metamodel%20must%20be%20present/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;通过实体类来生成数据库表，从而减少报错和实体类与数据库中字段不符而产生的一系列问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;搭好了一切环境后，项目运行：&lt;strong&gt;java.lang.IllegalArgumentException: At least one JPA metamodel must be present!&lt;/strong&gt;&lt;br&gt;
 报错截图：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191230160432160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
在网上找了很多方式，大多都是修改启动类，如：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@EnableAutoConfiguration(exclude&amp;#x3D;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        JpaRepositoriesAutoConfiguration.class&amp;#x2F;&amp;#x2F;禁止springboot自动加载持久化bean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class OrmtestApplication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static void main(String[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        SpringApplication.run(OrmtestApplication.class, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里项目的确不会报错，但是我们的配置文件的数据源 datasource 也不会被加载，就是说你的数据库用户名密码是否正确都无法进行判断。当然也无法实现我所需要的通过使用实体类生成数据库表功能。&lt;/p&gt;
&lt;p&gt;网上的第二种方式：&lt;br&gt;
去掉 spring-boot-starter-data-jpa 包的依赖版本，如下:&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;&amp;#x2F;groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;artifactId&amp;gt;spring-boot-starter-data-jpa&amp;lt;&amp;#x2F;artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&amp;#x2F;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是不管有没有依赖版本我都试过了，然并卵。&lt;br&gt;
所幸放弃了网上的解决方式，怀疑是依赖的冲突问题，更换 2.0.0 的 springboot 版本，报的错误发生了改变：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191230161911246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
当然，这里我是确认自己的代码没有问题，所以就不打算再去解决此错误，再次更改 springboot 版本，最终通过 2.2.0 版本完美运行。&lt;br&gt;
这里就介绍两个可行的版本 1.5.2 和 2.2.0。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/Redirecting%20to%20_bin_systemctl%20start%20mysqld.service%20Failed%20to%20start%20mysqld.service_%20Unit%20not%20found/</guid>
            <title>Redirecting to _bin_systemctl start mysqld.service Failed to start mysqld.service_ Unit not found</title>
            <link>https://thesqualls.github.io/2021/06/03/Redirecting%20to%20_bin_systemctl%20start%20mysqld.service%20Failed%20to%20start%20mysqld.service_%20Unit%20not%20found/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;为了在本地服务器下搭建 svn，在 CentOS 中安装 mysql，使用 yum install mysql-server mysql mysql-devel 安装 mysql 却无法启动 mysql 服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;使用service-mysqld-start在centos7中启动mysql报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用service-mysqld-start在centos7中启动mysql报错&#34;&gt;#&lt;/a&gt; 使用 service mysqld start 在 CentOS7 中启动 mysql 报错：&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191226135828597.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在提及该错误前，我们先提到一个 mysql 发展及当期背景&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL 是一种开放源代码的关系型数据库管理系统（RDBMS），使用最常用的数据库管理语言–结构化查询语言（SQL）进行数据库管理。&lt;/li&gt;
&lt;li&gt;MySQL 是开放源代码的，因此任何人都可以在 General Public License 的许可下下载并根据个性化的需要对其进行修改。&lt;/li&gt;
&lt;li&gt;在 2008 年 1 月 16 号 MySQL 被 Sun 公司收购。此后，随着 SUN 被甲骨文收购，MySQL 的所有权也落入 Oracle 的手中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;接着，我们再提到一个新的数据库 mariaDB：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MariaDB 数据库管理系统是 MySQL 的一个分支，主要由开源社区在维护，采用 GPL 授权许可 MariaDB 的目的是完全兼容 MySQL，包括 API 和命令行，使之能轻松成为 MySQL 的代替品。&lt;/li&gt;
&lt;li&gt;MariaDB 数据库是 MySQL 的创始人开发。&lt;/li&gt;
&lt;li&gt;开发这个 MariaDB 的原因之一是：甲骨文公司收购了 MySQL 后，有将 MySQL 闭源的潜在风险，因此社区采用分支的方式来避开这个风险。 过去一年中，大型互联网用户以及 Linux 发行商纷纷抛弃 MySQL，转投 MariaDB 阵营。MariaDB 是目前最受关注的 MySQL 数据库衍生版，也被视为开源数据库 MySQL 的替代品。&lt;br&gt;
-MariaDB 虽然被视为 MySQL 数据库的替代品，但它在扩展功能、存储引擎以及一些新的功能改进方面都强过 MySQL。而且从 MySQL 迁移到 MariaDB 也是非常简单的。&lt;/li&gt;
&lt;li&gt;mariaDB 新版本发布速度已经超过了 Oracle 官方的 MySQL 版本，mariaDB 具有比 mysql 更快的复制查询处理，更少的警告和 bug，运行速度更快，更好的功能测试，包含了更丰富的特性 (比如微秒的支持、线程池、子查询优化、组提交、进度报告等) 等等一系列好处。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;介绍了 mysql 与 mariaDB 后，相信大家也明白，mariaDB 和 mysql 哪个更有发展前景，当然，当前可能会有人很疑惑，这跟我报的错有什么关系，不不不，关系大了。你知道在当今时代 yum install mysql-server mysql mysql-devel 安装的是什么嘛？mysql？不不不，是 mariaDB，不相信？那你在运行一下 yum install mysql-server mysql mysql-devel 试试：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191226135507259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
提示的居然是 MariaDB database server，这你就明白了吧，因为 MariaDB 的维护与功能比 mysql 更稳定更迅捷，CentOS7 下 yum install mysql-server mysql mysql-devel 已经将 mysql 移除，默认安装 MariaDB 了，如果你此时用 service mysqld start 去启动 mysql 数据库，mysql 数据库都没有安装，那怎么能成功呢？启动 MariaDB 还差不多。讲到这里，大家也应该明白为什么使用 yum install mysql-server mysql mysql-devel 安装 mysql 数据库会报这个错误了吧。&lt;br&gt;
当然，因为是工作需求，即时 MariaDB 再好再优秀，咱也得跟团队来是吧，所以，这里讲一下怎么卸载 MariaDB 安装 mysql：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看安装的 MariaDB 列表：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rpm -qa | grep mariadb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191226140555276.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;卸载所有安装的 MariaDB (根据自己的 MariaDB 列表执行):&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rpm -e --nodeps mariadb-libs-5.5.64-1.el7.x86_64   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rpm -e --nodeps mariadb-5.5.64-1.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rpm -e --nodeps mariadb-server-5.5.64-1.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rpm -e --nodeps mariadb-devel-5.5.64-1.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;再次查看安装的 MariaDB 列表，确保全部卸载：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rpm -qa | grep mariadb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;下载 mysql 的 repo 源：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http:&amp;#x2F;&amp;#x2F;repo.mysql.com&amp;#x2F;mysql-community-release-el7-5.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;可能会产生错误&lt;/strong&gt;：-bash: wget: 未找到命令，执行安装 wget 即可，没报该错误可不执行：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;yum -y install wget&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;安装 mysql-community-release-el7-5.noarch.rpm&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;安装 mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo yum install mysql-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等待安装完成即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reboot 重启，service mysqld start 启动 mysql 测试。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://thesqualls.github.io/2021/06/03/NUXT%E5%BC%95%E5%85%A5element-ui%E5%90%8E%E4%BD%BF%E7%94%A8scroll(%E7%80%91%E5%B8%83%E6%B5%81)%E6%8A%A5%E9%94%99Failed%20to%20execute%20&#39;observe&#39;%20on%20&#39;MutationObserver&#39;_%20parameter%201%20is%20no/</guid>
            <title>NUXT引入element-ui后使用scroll(瀑布流)报错Failed to execute &#39;observe&#39; on &#39;MutationObserver&#39;_ parameter 1 is no</title>
            <link>https://thesqualls.github.io/2021/06/03/NUXT%E5%BC%95%E5%85%A5element-ui%E5%90%8E%E4%BD%BF%E7%94%A8scroll(%E7%80%91%E5%B8%83%E6%B5%81)%E6%8A%A5%E9%94%99Failed%20to%20execute%20&#39;observe&#39;%20on%20&#39;MutationObserver&#39;_%20parameter%201%20is%20no/</link>
            <pubDate>Thu, 03 Jun 2021 14:36:03 +0800</pubDate>
            <description><![CDATA[ &lt;h4 id=&#34;完整报错failed-to-execute-observe-on-mutationobserver-parameter-1-is-not-of-type&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完整报错failed-to-execute-observe-on-mutationobserver-parameter-1-is-not-of-type&#34;&gt;#&lt;/a&gt; 完整报错：&lt;strong&gt;Failed to execute ‘observe’ on ‘MutationObserver’: parameter 1 is not of type &#39;&lt;/strong&gt;：&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191226114527145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMA==,size_16,color_FFFFFF,t_70&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;浏览器控制台报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浏览器控制台报错&#34;&gt;#&lt;/a&gt; 浏览器控制台报错：&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191226114627909.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;解决方案一不推荐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案一不推荐&#34;&gt;#&lt;/a&gt; 解决方案一 (不推荐)：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;因为不是专业前端，对于 css 样式进行调节还是不推荐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;给使用 v-infinite-scroll 的标签设置高度和页面溢出：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;max-height: 100vh;&amp;#x2F;&amp;#x2F;与屏幕一样高度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;overflow-y: auto;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样虽然不会报错了，但是你的瀑布流到达底部可能会进行多次请求，甚至有可能导致数据重复，且由于 css 样式的变更，你的页面可能会崩坏，所以不推荐大家使用。&lt;/p&gt;
&lt;h4 id=&#34;解决方案二&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案二&#34;&gt;#&lt;/a&gt; 解决方案二：&lt;/h4&gt;
&lt;p&gt;讲到第二个方案前，就要讲到为什么会报这个错，这是由于 nuxt 的版本和 element-ui 的版本依赖不兼容而导致的结果，所以这个时候，要么修改 nuxt 的版本，要么修改 element-ui 的版本，这里推荐修改 nuxt 版本，为什么呢？因为 element-ui 不同版本的 index.css 文件的父目录文件名是不同的，这个时候我们不仅要修改 element-ui 的版本，还要修改引入的 index.css 文件路径，所以个人更加推荐修改 nuxt 版本，当然，如果是团队开发，还是尽量修改 element-ui 版本吧，这里就提供几个不冲突的方案：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;nuxt&amp;quot;: &amp;quot;^2.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;element-ui&amp;quot;: &amp;quot;^1.4.13&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;nuxt&amp;quot;: &amp;quot;^1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;element-ui&amp;quot;: &amp;quot;^2.3.9&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更改 element-ui 版本：cnpm/npm install element-ui@1.4.13  -S&lt;br&gt;
 更改 nuxt 版本：修改 package.json 中的 nuxt 版本再 cnpm/npm install 即可：&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20191226120747521.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;br&gt;
注：如果更改 element-ui 版本后运行报错，请参考此博客：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzMwMzUzMC9hcnRpY2xlL2RldGFpbHMvMTAzNjE2ODI4&#34;&gt;NUXT 报错解决 Could not compile template XXX：Cannot resolve XX from XX&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
